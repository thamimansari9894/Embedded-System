

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Fri Mar 07 11:56:18 2025

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,___awdiv
    43                           	FNCALL	_main,_PWM
    44                           	FNCALL	_main,_pwm_c
    45                           	FNROOT	_main
    46                           	global	_ADCON0
    47                           psect	text119,local,class=CODE,delta=2
    48                           global __ptext119
    49  0000                     __ptext119:
    50  001F                     _ADCON0	set	31
    51                           	global	_ADRESH
    52  001E                     _ADRESH	set	30
    53                           	global	_CCP1CON
    54  0017                     _CCP1CON	set	23
    55                           	global	_CCP2CON
    56  001D                     _CCP2CON	set	29
    57                           	global	_CCPR1L
    58  0015                     _CCPR1L	set	21
    59                           	global	_CCPR2L
    60  001B                     _CCPR2L	set	27
    61                           	global	_PORTC
    62  0007                     _PORTC	set	7
    63                           	global	_T2CON
    64  0012                     _T2CON	set	18
    65                           	global	_GODONE
    66  00FA                     _GODONE	set	250
    67                           	global	_RC0
    68  0038                     _RC0	set	56
    69                           	global	_RC3
    70  003B                     _RC3	set	59
    71                           	global	_RC4
    72  003C                     _RC4	set	60
    73                           	global	_RC5
    74  003D                     _RC5	set	61
    75                           	global	_ADCON1
    76  009F                     _ADCON1	set	159
    77                           	global	_ADRESL
    78  009E                     _ADRESL	set	158
    79                           	global	_PR2
    80  0092                     _PR2	set	146
    81                           	global	_TRISC
    82  0087                     _TRISC	set	135
    83                           	global	_TRISA0
    84  0428                     _TRISA0	set	1064
    85                           	file	"program.as"
    86                           	line	#
    87                           psect cinit,class=CODE,delta=2
    88                           global start_initialization
    89  0692                     start_initialization:
    90                           
    91                           psect cinit,class=CODE,delta=2
    92                           global end_of_initialization
    93                           
    94                           ;End of C runtime variable initialization code
    95                           
    96  0692                     end_of_initialization:
    97  0692  0183               clrf status
    98  0693  120A  118A  2F2D   ljmp _main	;jump to C main() function
    99                           psect	cstackCOMMON,class=COMMON,space=1
   100                           global __pcstackCOMMON
   101  0070                     __pcstackCOMMON:
   102                           	global	?_main
   103  0070                     ?_main:	; 0 bytes @ 0x0
   104                           	global	?___awdiv
   105  0070                     ?___awdiv:	; 2 bytes @ 0x0
   106                           	global	___awdiv@divisor
   107  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   108  0070                     	ds	2
   109                           	global	___awdiv@dividend
   110  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   111  0072                     	ds	2
   112                           	global	??___awdiv
   113  0074                     ??___awdiv:	; 0 bytes @ 0x4
   114  0074                     	ds	1
   115                           	global	___awdiv@counter
   116  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   117  0075                     	ds	1
   118                           	global	___awdiv@sign
   119  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   120  0076                     	ds	1
   121                           	global	___awdiv@quotient
   122  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   123  0077                     	ds	2
   124                           	global	?_PWM
   125  0079                     ?_PWM:	; 0 bytes @ 0x9
   126                           	global	?_pwm_c
   127  0079                     ?_pwm_c:	; 0 bytes @ 0x9
   128                           	global	PWM@duty
   129  0079                     PWM@duty:	; 2 bytes @ 0x9
   130                           	global	pwm_c@dut
   131  0079                     pwm_c@dut:	; 2 bytes @ 0x9
   132  0079                     	ds	2
   133                           	global	??_PWM
   134  007B                     ??_PWM:	; 0 bytes @ 0xB
   135                           	global	??_pwm_c
   136  007B                     ??_pwm_c:	; 0 bytes @ 0xB
   137                           	global	??_main
   138  007B                     ??_main:	; 0 bytes @ 0xB
   139  007B                     	ds	2
   140                           psect	cstackBANK0,class=BANK0,space=1
   141                           global __pcstackBANK0
   142  0020                     __pcstackBANK0:
   143                           	global	main@ADVAL
   144  0020                     main@ADVAL:	; 2 bytes @ 0x0
   145  0020                     	ds	2
   146                           	global	main@val
   147  0022                     main@val:	; 2 bytes @ 0x2
   148  0022                     	ds	2
   149 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   150 ;;Auto spaces:   Size  Autos    Used
   151 ;; COMMON          14     13      13
   152 ;; BANK0           80      4       4
   153 ;; BANK1           80      0       0
   154 ;; BANK3           96      0       0
   155 ;; BANK2           96      0       0
   156                           
   157 ;;
   158 ;; Pointer list with targets:
   159                           
   160 ;; ?___awdiv	int  size(1) Largest target is 0
   161 ;;
   162                           
   163                           
   164 ;;
   165 ;; Critical Paths under _main in COMMON
   166 ;;
   167 ;;   _main->_PWM
   168 ;;   _main->_pwm_c
   169 ;;   _pwm_c->___awdiv
   170 ;;   _PWM->___awdiv
   171 ;;
   172 ;; Critical Paths under _main in BANK0
   173 ;;
   174 ;;   None.
   175 ;;
   176 ;; Critical Paths under _main in BANK1
   177 ;;
   178 ;;   None.
   179 ;;
   180 ;; Critical Paths under _main in BANK3
   181 ;;
   182 ;;   None.
   183 ;;
   184 ;; Critical Paths under _main in BANK2
   185 ;;
   186 ;;   None.
   187                           
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   190 ;;
   191                           
   192 ;;
   193 ;;Call Graph Tables:
   194 ;;
   195 ;; ---------------------------------------------------------------------------------
   196 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   197 ;; ---------------------------------------------------------------------------------
   198 ;; (0) _main                                                 6     6      0     478
   199 ;;                                             11 COMMON     2     2      0
   200 ;;                                              0 BANK0      4     4      0
   201 ;;                            ___awdiv
   202 ;;                                _PWM
   203 ;;                              _pwm_c
   204 ;; ---------------------------------------------------------------------------------
   205 ;; (1) ___awdiv                                              9     5      4     300
   206 ;;                                              0 COMMON     9     5      4
   207 ;; ---------------------------------------------------------------------------------
   208 ;; (1) _pwm_c                                                2     0      2      22
   209 ;;                                              9 COMMON     2     0      2
   210 ;;                            ___awdiv (ARG)
   211 ;; ---------------------------------------------------------------------------------
   212 ;; (1) _PWM                                                  2     0      2      22
   213 ;;                                              9 COMMON     2     0      2
   214 ;;                            ___awdiv (ARG)
   215 ;; ---------------------------------------------------------------------------------
   216 ;; Estimated maximum stack depth 1
   217 ;; ---------------------------------------------------------------------------------
   218                           
   219 ;; Call Graph Graphs:
   220                           
   221 ;; _main (ROOT)
   222 ;;   ___awdiv
   223 ;;   _PWM
   224 ;;     ___awdiv (ARG)
   225 ;;   _pwm_c
   226 ;;     ___awdiv (ARG)
   227 ;;
   228                           
   229 ;; Address spaces:
   230                           
   231 ;;Name               Size   Autos  Total    Cost      Usage
   232 ;;BITCOMMON            E      0       0       0        0.0%
   233 ;;EEDATA             100      0       0       0        0.0%
   234 ;;NULL                 0      0       0       0        0.0%
   235 ;;CODE                 0      0       0       0        0.0%
   236 ;;COMMON               E      D       D       1       92.9%
   237 ;;BITSFR0              0      0       0       1        0.0%
   238 ;;SFR0                 0      0       0       1        0.0%
   239 ;;BITSFR1              0      0       0       2        0.0%
   240 ;;SFR1                 0      0       0       2        0.0%
   241 ;;STACK                0      0       1       2        0.0%
   242 ;;ABS                  0      0       0       3        0.0%
   243 ;;BITBANK0            50      0       0       4        0.0%
   244 ;;BITSFR3              0      0       0       4        0.0%
   245 ;;SFR3                 0      0       0       4        0.0%
   246 ;;BANK0               50      4       4       5        5.0%
   247 ;;BITSFR2              0      0       0       5        0.0%
   248 ;;SFR2                 0      0       0       5        0.0%
   249 ;;BITBANK1            50      0       0       6        0.0%
   250 ;;BANK1               50      0       0       7        0.0%
   251 ;;BITBANK3            60      0       0       8        0.0%
   252 ;;BANK3               60      0       0       9        0.0%
   253 ;;BITBANK2            60      0       0      10        0.0%
   254 ;;BANK2               60      0       0      11        0.0%
   255 ;;DATA                 0      0       0      12        0.0%
   256                           
   257                           	global	_main
   258                           psect	maintext,global,class=CODE,delta=2
   259                           global __pmaintext
   260  072D                     __pmaintext:
   261                           
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 5 in file "C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  val             2    2[BANK0 ] int 
   269 ;;  ADVAL           2    0[BANK0 ] int 
   270 ;; Return value:  Size  Location     Type
   271 ;;		None               void
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : 17F/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       4       0       0       0
   281 ;;      Temps:          2       0       0       0       0
   282 ;;      Totals:         2       4       0       0       0
   283 ;;Total ram usage:        6 bytes
   284 ;; Hardware stack levels required when called:    1
   285 ;; This function calls:
   286 ;;		___awdiv
   287 ;;		_PWM
   288 ;;		_pwm_c
   289 ;; This function is called by:
   290 ;;		Startup code after reset
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           psect	maintext
   294                           	file	"C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
   295                           	line	5
   296                           	global	__size_of_main
   297  00D3                     	__size_of_main	equ	__end_of_main-_main
   298                           	
   299  072D                     _main:	
   300                           	opt	stack 7
   301                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   302                           	line	6
   303                           	
   304  072D                     l1844:	
   305                           ;program.c: 6: TRISA0=1;
   306  072D  1683               	bsf	status, 5	;RP0=1, select bank1
   307  072E  1303               	bcf	status, 6	;RP1=0, select bank1
   308  072F  1405               	bsf	(1064/8)^080h,(1064)&7
   309                           	line	7
   310                           	
   311  0730                     l1846:	
   312                           ;program.c: 7: TRISC=0x00;
   313  0730  0187               	clrf	(135)^080h	;volatile
   314                           	line	8
   315                           ;program.c: 8: PORTC=0x00;
   316  0731  1283               	bcf	status, 5	;RP0=0, select bank0
   317  0732  1303               	bcf	status, 6	;RP1=0, select bank0
   318  0733  0187               	clrf	(7)	;volatile
   319  0734  2F35               	goto	l1848
   320                           	line	9
   321                           ;program.c: 9: while(1){
   322                           	
   323  0735                     l565:	
   324                           	line	11
   325                           	
   326  0735                     l1848:	
   327                           ;program.c: 10: int ADVAL,val;
   328                           ;program.c: 11: ADCON0=0x01;
   329  0735  3001               	movlw	(01h)
   330  0736  1283               	bcf	status, 5	;RP0=0, select bank0
   331  0737  1303               	bcf	status, 6	;RP1=0, select bank0
   332  0738  009F               	movwf	(31)	;volatile
   333                           	line	12
   334                           	
   335  0739                     l1850:	
   336                           ;program.c: 12: ADCON1=0x80;
   337  0739  3080               	movlw	(080h)
   338  073A  1683               	bsf	status, 5	;RP0=1, select bank1
   339  073B  1303               	bcf	status, 6	;RP1=0, select bank1
   340  073C  009F               	movwf	(159)^080h	;volatile
   341                           	line	13
   342                           	
   343  073D                     l1852:	
   344                           ;program.c: 13: GODONE=1;
   345  073D  1283               	bcf	status, 5	;RP0=0, select bank0
   346  073E  1303               	bcf	status, 6	;RP1=0, select bank0
   347  073F  151F               	bsf	(250/8),(250)&7
   348                           	line	14
   349                           ;program.c: 14: while(GODONE==1);
   350  0740  2F41               	goto	l566
   351                           	
   352  0741                     l567:	
   353                           	
   354  0741                     l566:	
   355  0741  191F               	btfsc	(250/8),(250)&7
   356  0742  2F44               	goto	u2311
   357  0743  2F45               	goto	u2310
   358  0744                     u2311:
   359  0744  2F41               	goto	l566
   360  0745                     u2310:
   361  0745  2F46               	goto	l1854
   362                           	
   363  0746                     l568:	
   364                           	line	15
   365                           	
   366  0746                     l1854:	
   367                           ;program.c: 15: ADVAL=ADRESL|(ADRESH<<8);
   368  0746  081E               	movf	(30),w	;volatile
   369  0747  00FB               	movwf	(??_main+0)+0
   370  0748  01FC               	clrf	(??_main+0)+0+1
   371  0749  3008               	movlw	08h
   372  074A  00FF               	movwf	btemp+1
   373  074B                     u2325:
   374  074B  1003               	clrc
   375  074C  0DFB               	rlf	(??_main+0)+0,f
   376  074D  0DFC               	rlf	(??_main+0)+1,f
   377  074E  0BFF               	decfsz	btemp+1,f
   378  074F  2F4B               	goto	u2325
   379  0750  087B               	movf	0+(??_main+0)+0,w
   380  0751  1683               	bsf	status, 5	;RP0=1, select bank1
   381  0752  1303               	bcf	status, 6	;RP1=0, select bank1
   382  0753  041E               	iorwf	(158)^080h,w	;volatile
   383  0754  1283               	bcf	status, 5	;RP0=0, select bank0
   384  0755  1303               	bcf	status, 6	;RP1=0, select bank0
   385  0756  00A0               	movwf	(main@ADVAL)
   386  0757  087C               	movf	1+(??_main+0)+0,w
   387  0758  00A1               	movwf	1+(main@ADVAL)
   388                           	line	16
   389                           ;program.c: 16: val=ADRESL|(ADRESH<<8);
   390  0759  081E               	movf	(30),w	;volatile
   391  075A  00FB               	movwf	(??_main+0)+0
   392  075B  01FC               	clrf	(??_main+0)+0+1
   393  075C  3008               	movlw	08h
   394  075D  00FF               	movwf	btemp+1
   395  075E                     u2335:
   396  075E  1003               	clrc
   397  075F  0DFB               	rlf	(??_main+0)+0,f
   398  0760  0DFC               	rlf	(??_main+0)+1,f
   399  0761  0BFF               	decfsz	btemp+1,f
   400  0762  2F5E               	goto	u2335
   401  0763  087B               	movf	0+(??_main+0)+0,w
   402  0764  1683               	bsf	status, 5	;RP0=1, select bank1
   403  0765  1303               	bcf	status, 6	;RP1=0, select bank1
   404  0766  041E               	iorwf	(158)^080h,w	;volatile
   405  0767  1283               	bcf	status, 5	;RP0=0, select bank0
   406  0768  1303               	bcf	status, 6	;RP1=0, select bank0
   407  0769  00A2               	movwf	(main@val)
   408  076A  087C               	movf	1+(??_main+0)+0,w
   409  076B  00A3               	movwf	1+(main@val)
   410                           	line	17
   411                           	
   412  076C                     l1856:	
   413                           ;program.c: 17: PWM(ADVAL/4);
   414  076C  3004               	movlw	low(04h)
   415  076D  00F0               	movwf	(?___awdiv)
   416  076E  3000               	movlw	high(04h)
   417  076F  00F1               	movwf	((?___awdiv))+1
   418  0770  0821               	movf	(main@ADVAL+1),w
   419  0771  01F3               	clrf	1+(?___awdiv)+02h
   420  0772  07F3               	addwf	1+(?___awdiv)+02h
   421  0773  0820               	movf	(main@ADVAL),w
   422  0774  01F2               	clrf	0+(?___awdiv)+02h
   423  0775  07F2               	addwf	0+(?___awdiv)+02h
   424                           
   425  0776  120A  118A  26B4   	fcall	___awdiv
              120A  118A         
   426  077B  0871               	movf	(1+(?___awdiv)),w
   427  077C  01FA               	clrf	(?_PWM+1)
   428  077D  07FA               	addwf	(?_PWM+1)
   429  077E  0870               	movf	(0+(?___awdiv)),w
   430  077F  01F9               	clrf	(?_PWM)
   431  0780  07F9               	addwf	(?_PWM)
   432                           
   433  0781  120A  118A  2696   	fcall	_PWM
              120A  118A         
   434                           	line	18
   435                           	
   436  0786                     l1858:	
   437                           ;program.c: 18: pwm_c(val/2);
   438  0786  3002               	movlw	low(02h)
   439  0787  00F0               	movwf	(?___awdiv)
   440  0788  3000               	movlw	high(02h)
   441  0789  00F1               	movwf	((?___awdiv))+1
   442  078A  1283               	bcf	status, 5	;RP0=0, select bank0
   443  078B  1303               	bcf	status, 6	;RP1=0, select bank0
   444  078C  0823               	movf	(main@val+1),w
   445  078D  01F3               	clrf	1+(?___awdiv)+02h
   446  078E  07F3               	addwf	1+(?___awdiv)+02h
   447  078F  0822               	movf	(main@val),w
   448  0790  01F2               	clrf	0+(?___awdiv)+02h
   449  0791  07F2               	addwf	0+(?___awdiv)+02h
   450                           
   451  0792  120A  118A  26B4   	fcall	___awdiv
              120A  118A         
   452  0797  0871               	movf	(1+(?___awdiv)),w
   453  0798  01FA               	clrf	(?_pwm_c+1)
   454  0799  07FA               	addwf	(?_pwm_c+1)
   455  079A  0870               	movf	(0+(?___awdiv)),w
   456  079B  01F9               	clrf	(?_pwm_c)
   457  079C  07F9               	addwf	(?_pwm_c)
   458                           
   459  079D  120A  118A  26A5   	fcall	_pwm_c
              120A  118A         
   460                           	line	19
   461                           ;program.c: 19: if(ADVAL>500){
   462  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
   463  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
   464  07A4  0821               	movf	(main@ADVAL+1),w
   465  07A5  3A80               	xorlw	80h
   466  07A6  00FF               	movwf	btemp+1
   467  07A7  3081               	movlw	(high(01F5h))^80h
   468  07A8  027F               	subwf	btemp+1,w
   469  07A9  1D03               	skipz
   470  07AA  2FAD               	goto	u2345
   471  07AB  30F5               	movlw	low(01F5h)
   472  07AC  0220               	subwf	(main@ADVAL),w
   473  07AD                     u2345:
   474                           
   475  07AD  1C03               	skipc
   476  07AE  2FB0               	goto	u2341
   477  07AF  2FB1               	goto	u2340
   478  07B0                     u2341:
   479  07B0  2FB6               	goto	l1862
   480  07B1                     u2340:
   481                           	line	20
   482                           	
   483  07B1                     l1860:	
   484                           ;program.c: 20: RC0=1;
   485  07B1  1283               	bcf	status, 5	;RP0=0, select bank0
   486  07B2  1303               	bcf	status, 6	;RP1=0, select bank0
   487  07B3  1407               	bsf	(56/8),(56)&7
   488                           	line	21
   489                           ;program.c: 21: RC3=0;}
   490  07B4  1187               	bcf	(59/8),(59)&7
   491  07B5  2FB6               	goto	l1862
   492                           	
   493  07B6                     l569:	
   494                           	line	22
   495                           	
   496  07B6                     l1862:	
   497                           ;program.c: 22: if(val>500){
   498  07B6  1283               	bcf	status, 5	;RP0=0, select bank0
   499  07B7  1303               	bcf	status, 6	;RP1=0, select bank0
   500  07B8  0823               	movf	(main@val+1),w
   501  07B9  3A80               	xorlw	80h
   502  07BA  00FF               	movwf	btemp+1
   503  07BB  3081               	movlw	(high(01F5h))^80h
   504  07BC  027F               	subwf	btemp+1,w
   505  07BD  1D03               	skipz
   506  07BE  2FC1               	goto	u2355
   507  07BF  30F5               	movlw	low(01F5h)
   508  07C0  0222               	subwf	(main@val),w
   509  07C1                     u2355:
   510                           
   511  07C1  1C03               	skipc
   512  07C2  2FC4               	goto	u2351
   513  07C3  2FC5               	goto	u2350
   514  07C4                     u2351:
   515  07C4  2FCA               	goto	l1866
   516  07C5                     u2350:
   517                           	line	23
   518                           	
   519  07C5                     l1864:	
   520                           ;program.c: 23: RC4=0;
   521  07C5  1283               	bcf	status, 5	;RP0=0, select bank0
   522  07C6  1303               	bcf	status, 6	;RP1=0, select bank0
   523  07C7  1207               	bcf	(60/8),(60)&7
   524                           	line	24
   525                           ;program.c: 24: RC5=1;}
   526  07C8  1687               	bsf	(61/8),(61)&7
   527  07C9  2FCA               	goto	l1866
   528                           	
   529  07CA                     l570:	
   530                           	line	25
   531                           	
   532  07CA                     l1866:	
   533                           ;program.c: 25: if(ADVAL<500){
   534  07CA  1283               	bcf	status, 5	;RP0=0, select bank0
   535  07CB  1303               	bcf	status, 6	;RP1=0, select bank0
   536  07CC  0821               	movf	(main@ADVAL+1),w
   537  07CD  3A80               	xorlw	80h
   538  07CE  00FF               	movwf	btemp+1
   539  07CF  3081               	movlw	(high(01F4h))^80h
   540  07D0  027F               	subwf	btemp+1,w
   541  07D1  1D03               	skipz
   542  07D2  2FD5               	goto	u2365
   543  07D3  30F4               	movlw	low(01F4h)
   544  07D4  0220               	subwf	(main@ADVAL),w
   545  07D5                     u2365:
   546                           
   547  07D5  1803               	skipnc
   548  07D6  2FD8               	goto	u2361
   549  07D7  2FD9               	goto	u2360
   550  07D8                     u2361:
   551  07D8  2FDE               	goto	l1870
   552  07D9                     u2360:
   553                           	line	26
   554                           	
   555  07D9                     l1868:	
   556                           ;program.c: 26: RC0=0;
   557  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
   558  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
   559  07DB  1007               	bcf	(56/8),(56)&7
   560                           	line	27
   561                           ;program.c: 27: RC3=1;}
   562  07DC  1587               	bsf	(59/8),(59)&7
   563  07DD  2FDE               	goto	l1870
   564                           	
   565  07DE                     l571:	
   566                           	line	28
   567                           	
   568  07DE                     l1870:	
   569                           ;program.c: 28: if(val<500){
   570  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
   571  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
   572  07E0  0823               	movf	(main@val+1),w
   573  07E1  3A80               	xorlw	80h
   574  07E2  00FF               	movwf	btemp+1
   575  07E3  3081               	movlw	(high(01F4h))^80h
   576  07E4  027F               	subwf	btemp+1,w
   577  07E5  1D03               	skipz
   578  07E6  2FE9               	goto	u2375
   579  07E7  30F4               	movlw	low(01F4h)
   580  07E8  0222               	subwf	(main@val),w
   581  07E9                     u2375:
   582                           
   583  07E9  1803               	skipnc
   584  07EA  2FEC               	goto	u2371
   585  07EB  2FED               	goto	u2370
   586  07EC                     u2371:
   587  07EC  2FF2               	goto	l1874
   588  07ED                     u2370:
   589                           	line	29
   590                           	
   591  07ED                     l1872:	
   592                           ;program.c: 29: RC4=1;
   593  07ED  1283               	bcf	status, 5	;RP0=0, select bank0
   594  07EE  1303               	bcf	status, 6	;RP1=0, select bank0
   595  07EF  1607               	bsf	(60/8),(60)&7
   596                           	line	30
   597                           ;program.c: 30: RC5=0;}
   598  07F0  1287               	bcf	(61/8),(61)&7
   599  07F1  2FF2               	goto	l1874
   600                           	
   601  07F2                     l572:	
   602                           	line	31
   603                           	
   604  07F2                     l1874:	
   605                           ;program.c: 31: _delay((unsigned long)((10)*(20000000/4000.0)));}}
   606                           	opt asmopt_off
   607  07F2  3041               movlw	65
   608  07F3  00FC               movwf	((??_main+0)+0+1),f
   609  07F4  30EE               	movlw	238
   610  07F5  00FB               movwf	((??_main+0)+0),f
   611  07F6                     u2387:
   612  07F6  0BFB               	decfsz	((??_main+0)+0),f
   613  07F7  2FF6               	goto	u2387
   614  07F8  0BFC               	decfsz	((??_main+0)+0+1),f
   615  07F9  2FF6               	goto	u2387
   616  07FA  0064               	clrwdt
   617                           opt asmopt_on
   618                           
   619  07FB  2F35               	goto	l1848
   620                           	
   621  07FC                     l573:	
   622                           	line	9
   623  07FC  2F35               	goto	l1848
   624                           	
   625  07FD                     l574:	
   626                           	line	31
   627                           	
   628  07FD                     l575:	
   629                           	global	start
   630  07FD  120A  118A  2800   	ljmp	start
   631                           	opt stack 0
   632                           GLOBAL	__end_of_main
   633  0800                     	__end_of_main:
   634 ;; =============== function _main ends ============
   635                           
   636                           	signat	_main,88
   637                           	global	___awdiv
   638                           psect	text120,local,class=CODE,delta=2
   639                           global __ptext120
   640  06B4                     __ptext120:
   641                           
   642 ;; *************** function ___awdiv *****************
   643 ;; Defined at:
   644 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  divisor         2    0[COMMON] int 
   647 ;;  dividend        2    2[COMMON] int 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  quotient        2    7[COMMON] int 
   650 ;;  sign            1    6[COMMON] unsigned char 
   651 ;;  counter         1    5[COMMON] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  2    0[COMMON] int 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         4       0       0       0       0
   662 ;;      Locals:         4       0       0       0       0
   663 ;;      Temps:          1       0       0       0       0
   664 ;;      Totals:         9       0       0       0       0
   665 ;;Total ram usage:        9 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_main
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           psect	text120
   674                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.80\sources\awdiv.c"
   675                           	line	5
   676                           	global	__size_of___awdiv
   677  0079                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
   678                           	
   679  06B4                     ___awdiv:	
   680                           	opt	stack 7
   681                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   682                           	line	9
   683                           	
   684  06B4                     l1806:	
   685  06B4  1003               	clrc
   686  06B5  3000               	movlw	0
   687  06B6  1803               	btfsc	status,0
   688  06B7  3001               	movlw	1
   689  06B8  00F6               	movwf	(___awdiv@sign)
   690                           	line	10
   691                           	
   692  06B9                     l1808:	
   693  06B9  1FF1               	btfss	(___awdiv@divisor+1),7
   694  06BA  2EBC               	goto	u2211
   695  06BB  2EBD               	goto	u2210
   696  06BC                     u2211:
   697  06BC  2EC6               	goto	l1812
   698  06BD                     u2210:
   699                           	line	11
   700                           	
   701  06BD                     l1810:	
   702  06BD  09F0               	comf	(___awdiv@divisor),f
   703  06BE  09F1               	comf	(___awdiv@divisor+1),f
   704  06BF  0AF0               	incf	(___awdiv@divisor),f
   705  06C0  1903               	skipnz
   706  06C1  0AF1               	incf	(___awdiv@divisor+1),f
   707                           	line	12
   708  06C2  01F6               	clrf	(___awdiv@sign)
   709  06C3  1403               	bsf	status,0
   710  06C4  0DF6               	rlf	(___awdiv@sign),f
   711  06C5  2EC6               	goto	l1812
   712                           	line	13
   713                           	
   714  06C6                     l730:	
   715                           	line	14
   716                           	
   717  06C6                     l1812:	
   718  06C6  1FF3               	btfss	(___awdiv@dividend+1),7
   719  06C7  2EC9               	goto	u2221
   720  06C8  2ECA               	goto	u2220
   721  06C9                     u2221:
   722  06C9  2ED3               	goto	l731
   723  06CA                     u2220:
   724                           	line	15
   725                           	
   726  06CA                     l1814:	
   727  06CA  09F2               	comf	(___awdiv@dividend),f
   728  06CB  09F3               	comf	(___awdiv@dividend+1),f
   729  06CC  0AF2               	incf	(___awdiv@dividend),f
   730  06CD  1903               	skipnz
   731  06CE  0AF3               	incf	(___awdiv@dividend+1),f
   732                           	line	16
   733                           	
   734  06CF                     l1816:	
   735  06CF  3001               	movlw	(01h)
   736  06D0  00F4               	movwf	(??___awdiv+0)+0
   737  06D1  0874               	movf	(??___awdiv+0)+0,w
   738  06D2  06F6               	xorwf	(___awdiv@sign),f
   739                           	line	17
   740                           	
   741  06D3                     l731:	
   742                           	line	18
   743  06D3  3000               	movlw	low(0)
   744  06D4  00F7               	movwf	(___awdiv@quotient)
   745  06D5  3000               	movlw	high(0)
   746  06D6  00F8               	movwf	((___awdiv@quotient))+1
   747                           	line	19
   748  06D7  0871               	movf	(___awdiv@divisor+1),w
   749  06D8  0470               	iorwf	(___awdiv@divisor),w
   750  06D9  1903               	skipnz
   751  06DA  2EDC               	goto	u2231
   752  06DB  2EDD               	goto	u2230
   753  06DC                     u2231:
   754  06DC  2F1B               	goto	l1836
   755  06DD                     u2230:
   756                           	line	20
   757                           	
   758  06DD                     l1818:	
   759  06DD  01F5               	clrf	(___awdiv@counter)
   760  06DE  1403               	bsf	status,0
   761  06DF  0DF5               	rlf	(___awdiv@counter),f
   762                           	line	21
   763  06E0  2EED               	goto	l1824
   764                           	
   765  06E1                     l734:	
   766                           	line	22
   767                           	
   768  06E1                     l1820:	
   769  06E1  3001               	movlw	01h
   770                           	
   771  06E2                     u2245:
   772  06E2  1003               	clrc
   773  06E3  0DF0               	rlf	(___awdiv@divisor),f
   774  06E4  0DF1               	rlf	(___awdiv@divisor+1),f
   775  06E5  3EFF               	addlw	-1
   776  06E6  1D03               	skipz
   777  06E7  2EE2               	goto	u2245
   778                           	line	23
   779                           	
   780  06E8                     l1822:	
   781  06E8  3001               	movlw	(01h)
   782  06E9  00F4               	movwf	(??___awdiv+0)+0
   783  06EA  0874               	movf	(??___awdiv+0)+0,w
   784  06EB  07F5               	addwf	(___awdiv@counter),f
   785  06EC  2EED               	goto	l1824
   786                           	line	24
   787                           	
   788  06ED                     l733:	
   789                           	line	21
   790                           	
   791  06ED                     l1824:	
   792  06ED  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
   793  06EE  2EF0               	goto	u2251
   794  06EF  2EF1               	goto	u2250
   795  06F0                     u2251:
   796  06F0  2EE1               	goto	l1820
   797  06F1                     u2250:
   798  06F1  2EF3               	goto	l1826
   799                           	
   800  06F2                     l735:	
   801  06F2  2EF3               	goto	l1826
   802                           	line	25
   803                           	
   804  06F3                     l736:	
   805                           	line	26
   806                           	
   807  06F3                     l1826:	
   808  06F3  3001               	movlw	01h
   809                           	
   810  06F4                     u2265:
   811  06F4  1003               	clrc
   812  06F5  0DF7               	rlf	(___awdiv@quotient),f
   813  06F6  0DF8               	rlf	(___awdiv@quotient+1),f
   814  06F7  3EFF               	addlw	-1
   815  06F8  1D03               	skipz
   816  06F9  2EF4               	goto	u2265
   817                           	line	27
   818  06FA  0871               	movf	(___awdiv@divisor+1),w
   819  06FB  0273               	subwf	(___awdiv@dividend+1),w
   820  06FC  1D03               	skipz
   821  06FD  2F00               	goto	u2275
   822  06FE  0870               	movf	(___awdiv@divisor),w
   823  06FF  0272               	subwf	(___awdiv@dividend),w
   824  0700                     u2275:
   825  0700  1C03               	skipc
   826  0701  2F03               	goto	u2271
   827  0702  2F04               	goto	u2270
   828  0703                     u2271:
   829  0703  2F0C               	goto	l1832
   830  0704                     u2270:
   831                           	line	28
   832                           	
   833  0704                     l1828:	
   834  0704  0870               	movf	(___awdiv@divisor),w
   835  0705  02F2               	subwf	(___awdiv@dividend),f
   836  0706  0871               	movf	(___awdiv@divisor+1),w
   837  0707  1C03               	skipc
   838  0708  03F3               	decf	(___awdiv@dividend+1),f
   839  0709  02F3               	subwf	(___awdiv@dividend+1),f
   840                           	line	29
   841                           	
   842  070A                     l1830:	
   843  070A  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
   844  070B  2F0C               	goto	l1832
   845                           	line	30
   846                           	
   847  070C                     l737:	
   848                           	line	31
   849                           	
   850  070C                     l1832:	
   851  070C  3001               	movlw	01h
   852                           	
   853  070D                     u2285:
   854  070D  1003               	clrc
   855  070E  0CF1               	rrf	(___awdiv@divisor+1),f
   856  070F  0CF0               	rrf	(___awdiv@divisor),f
   857  0710  3EFF               	addlw	-1
   858  0711  1D03               	skipz
   859  0712  2F0D               	goto	u2285
   860                           	line	32
   861                           	
   862  0713                     l1834:	
   863  0713  3001               	movlw	low(01h)
   864  0714  02F5               	subwf	(___awdiv@counter),f
   865  0715  1D03               	btfss	status,2
   866  0716  2F18               	goto	u2291
   867  0717  2F19               	goto	u2290
   868  0718                     u2291:
   869  0718  2EF3               	goto	l1826
   870  0719                     u2290:
   871  0719  2F1B               	goto	l1836
   872                           	
   873  071A                     l738:	
   874  071A  2F1B               	goto	l1836
   875                           	line	33
   876                           	
   877  071B                     l732:	
   878                           	line	34
   879                           	
   880  071B                     l1836:	
   881  071B  0876               	movf	(___awdiv@sign),w
   882  071C  1D03               	skipz
   883  071D  2F1F               	goto	u2300
   884  071E  2F25               	goto	l1840
   885  071F                     u2300:
   886                           	line	35
   887                           	
   888  071F                     l1838:	
   889  071F  09F7               	comf	(___awdiv@quotient),f
   890  0720  09F8               	comf	(___awdiv@quotient+1),f
   891  0721  0AF7               	incf	(___awdiv@quotient),f
   892  0722  1903               	skipnz
   893  0723  0AF8               	incf	(___awdiv@quotient+1),f
   894  0724  2F25               	goto	l1840
   895                           	
   896  0725                     l739:	
   897                           	line	36
   898                           	
   899  0725                     l1840:	
   900  0725  0878               	movf	(___awdiv@quotient+1),w
   901  0726  01F1               	clrf	(?___awdiv+1)
   902  0727  07F1               	addwf	(?___awdiv+1)
   903  0728  0877               	movf	(___awdiv@quotient),w
   904  0729  01F0               	clrf	(?___awdiv)
   905  072A  07F0               	addwf	(?___awdiv)
   906                           
   907  072B  2F2C               	goto	l740
   908                           	
   909  072C                     l1842:	
   910                           	line	37
   911                           	
   912  072C                     l740:	
   913  072C  0008               	return
   914                           	opt stack 0
   915                           GLOBAL	__end_of___awdiv
   916  072D                     	__end_of___awdiv:
   917 ;; =============== function ___awdiv ends ============
   918                           
   919                           	signat	___awdiv,8314
   920                           	global	_pwm_c
   921                           psect	text121,local,class=CODE,delta=2
   922                           global __ptext121
   923  06A5                     __ptext121:
   924                           
   925 ;; *************** function _pwm_c *****************
   926 ;; Defined at:
   927 ;;		line 39 in file "C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  dut             2    9[COMMON] int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         2       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0
   944 ;;      Totals:         2       0       0       0       0
   945 ;;Total ram usage:        2 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           psect	text121
   954                           	file	"C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
   955                           	line	39
   956                           	global	__size_of_pwm_c
   957  000F                     	__size_of_pwm_c	equ	__end_of_pwm_c-_pwm_c
   958                           	
   959  06A5                     _pwm_c:	
   960                           	opt	stack 7
   961                           ; Regs used in _pwm_c: [wreg]
   962                           	line	40
   963                           	
   964  06A5                     l1804:	
   965                           ;program.c: 40: T2CON=0x05;
   966  06A5  3005               	movlw	(05h)
   967  06A6  1283               	bcf	status, 5	;RP0=0, select bank0
   968  06A7  1303               	bcf	status, 6	;RP1=0, select bank0
   969  06A8  0092               	movwf	(18)	;volatile
   970                           	line	41
   971                           ;program.c: 41: PR2=125;
   972  06A9  307D               	movlw	(07Dh)
   973  06AA  1683               	bsf	status, 5	;RP0=1, select bank1
   974  06AB  1303               	bcf	status, 6	;RP1=0, select bank1
   975  06AC  0092               	movwf	(146)^080h	;volatile
   976                           	line	42
   977                           ;program.c: 42: CCPR2L=dut;
   978  06AD  0879               	movf	(pwm_c@dut),w
   979  06AE  1283               	bcf	status, 5	;RP0=0, select bank0
   980  06AF  1303               	bcf	status, 6	;RP1=0, select bank0
   981  06B0  009B               	movwf	(27)	;volatile
   982                           	line	43
   983                           ;program.c: 43: CCP2CON=0x0C;}
   984  06B1  300C               	movlw	(0Ch)
   985  06B2  009D               	movwf	(29)	;volatile
   986                           	
   987  06B3                     l581:	
   988  06B3  0008               	return
   989                           	opt stack 0
   990                           GLOBAL	__end_of_pwm_c
   991  06B4                     	__end_of_pwm_c:
   992 ;; =============== function _pwm_c ends ============
   993                           
   994                           	signat	_pwm_c,4216
   995                           	global	_PWM
   996                           psect	text122,local,class=CODE,delta=2
   997                           global __ptext122
   998  0696                     __ptext122:
   999                           
  1000 ;; *************** function _PWM *****************
  1001 ;; Defined at:
  1002 ;;		line 33 in file "C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  duty            2    9[COMMON] int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;		None               void
  1009 ;; Registers used:
  1010 ;;		wreg
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         2       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         2       0       0       0       0
  1020 ;;Total ram usage:        2 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           psect	text122
  1029                           	file	"C:\PIC16F877A Demo Concepts\PWM with DC motor\program.c"
  1030                           	line	33
  1031                           	global	__size_of_PWM
  1032  000F                     	__size_of_PWM	equ	__end_of_PWM-_PWM
  1033                           	
  1034  0696                     _PWM:	
  1035                           	opt	stack 7
  1036                           ; Regs used in _PWM: [wreg]
  1037                           	line	34
  1038                           	
  1039  0696                     l1802:	
  1040                           ;program.c: 34: T2CON=0x05;
  1041  0696  3005               	movlw	(05h)
  1042  0697  1283               	bcf	status, 5	;RP0=0, select bank0
  1043  0698  1303               	bcf	status, 6	;RP1=0, select bank0
  1044  0699  0092               	movwf	(18)	;volatile
  1045                           	line	35
  1046                           ;program.c: 35: PR2=36;
  1047  069A  3024               	movlw	(024h)
  1048  069B  1683               	bsf	status, 5	;RP0=1, select bank1
  1049  069C  1303               	bcf	status, 6	;RP1=0, select bank1
  1050  069D  0092               	movwf	(146)^080h	;volatile
  1051                           	line	36
  1052                           ;program.c: 36: CCPR1L=duty;
  1053  069E  0879               	movf	(PWM@duty),w
  1054  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  1055  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1056  06A1  0095               	movwf	(21)	;volatile
  1057                           	line	37
  1058                           ;program.c: 37: CCP1CON=0x0C;}
  1059  06A2  300C               	movlw	(0Ch)
  1060  06A3  0097               	movwf	(23)	;volatile
  1061                           	
  1062  06A4                     l578:	
  1063  06A4  0008               	return
  1064                           	opt stack 0
  1065                           GLOBAL	__end_of_PWM
  1066  06A5                     	__end_of_PWM:
  1067 ;; =============== function _PWM ends ============
  1068                           
  1069                           	signat	_PWM,4216
  1070                           psect	text123,local,class=CODE,delta=2
  1071                           global __ptext123
  1072  0000                     __ptext123:
  1073                           	global	btemp
  1074  007E                     	btemp set 07Eh
  1075                           
  1076                           	DABS	1,126,2	;btemp
  1077                           	global	wtemp0
  1078  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Mar 07 11:56:18 2025

        ___awdiv@sign 0076                   l730 06C6                   l570 07CA                   l731 06D3  
                 l571 07DE                   l740 072C                   l732 071B                   l572 07F2  
                 l581 06B3                   l733 06ED                   l573 07FC                   l565 0735  
                 l734 06E1                   l574 07FD                   l566 0741                   l735 06F2  
                 l575 07FD                   l567 0741                   l736 06F3                   l568 0746  
                 l737 070C                   l569 07B6                   l578 06A4                   l738 071A  
                 l739 0725                   _RC0 0038                   _RC3 003B                   _RC4 003C  
                 _RC5 003D                   _PR2 0092                   _PWM 0696                  ?_PWM 0079  
                l1802 0696                  l1810 06BD                  l1804 06A5                  l1820 06E1  
                l1812 06C6                  l1830 070A                  l1822 06E8                  l1814 06CA  
                l1806 06B4                  l1840 0725                  l1832 070C                  l1824 06ED  
                l1816 06CF                  l1808 06B9                  l1842 072C                  l1834 0713  
                l1826 06F3                  l1818 06DD                  l1850 0739                  l1828 0704  
                l1836 071B                  l1860 07B1                  l1852 073D                  l1844 072D  
                l1838 071F                  l1870 07DE                  l1862 07B6                  l1854 0746  
                l1846 0730                  l1872 07ED                  l1864 07C5                  l1856 076C  
                l1848 0735                  l1874 07F2                  l1866 07CA                  l1858 0786  
                l1868 07D9                  u2210 06BD                  u2211 06BC                  u2300 071F  
                u2220 06CA                  u2221 06C9                  u2230 06DD                  u2310 0745  
                u2231 06DC                  u2311 0744                  u2250 06F1                  u2251 06F0  
                u2340 07B1                  u2245 06E2                  u2341 07B0                  u2325 074B  
                u2270 0704                  u2350 07C5                  u2271 0703                  u2351 07C4  
                u2335 075E                  u2360 07D9                  u2265 06F4                  u2361 07D8  
                u2345 07AD                  u2290 0719                  u2370 07ED                  u2291 0718  
                u2275 0700                  u2371 07EC                  u2355 07C1                  u2285 070D  
                u2365 07D5                  u2375 07E9                  u2387 07F6                  _main 072D  
                btemp 007E                  start 0000                 ??_PWM 007B                 ?_main 0070  
     __end_of___awdiv 072D       ___awdiv@divisor 0070                 _T2CON 0012       ___awdiv@counter 0075  
               _PORTC 0007                 _TRISC 0087                 _pwm_c 06A5                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 007B                _ADCON0 001F  
              _ADCON1 009F                _ADRESH 001E                _ADRESL 009E                _CCPR1L 0015  
              _CCPR2L 001B      ___awdiv@dividend 0072                ?_pwm_c 0079                _GODONE 00FA  
              _TRISA0 0428             ??___awdiv 0074      ___awdiv@quotient 0077        __pcstackCOMMON 0070  
       __end_of_pwm_c 06B4               ??_pwm_c 007B            __pmaintext 072D               _CCP1CON 0017  
             _CCP2CON 001D               PWM@duty 0079               ___awdiv 06B4          __size_of_PWM 000F  
             main@val 0022  end_of_initialization 0692   start_initialization 0692           __end_of_PWM 06A5  
       __pcstackBANK0 0020              ?___awdiv 0070             __ptext120 06B4             __ptext121 06A5  
           __ptext122 0696             __ptext123 0000             __ptext119 0000        __size_of_pwm_c 000F  
           main@ADVAL 0020      __size_of___awdiv 0079         __size_of_main 00D3              pwm_c@dut 0079  
