

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Wed Feb 26 13:25:39 2025

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_cmd
    43                           	FNCALL	_main,_EEPROM_write
    44                           	FNCALL	_main,_EEPROM_read
    45                           	FNCALL	_main,_dat
    46                           	FNROOT	_main
    47                           	global	_PORTC
    48                           psect	text96,local,class=CODE,delta=2
    49                           global __ptext96
    50  0000                     __ptext96:
    51  0007                     _PORTC	set	7
    52                           	global	_PORTD
    53  0008                     _PORTD	set	8
    54                           	global	_RC0
    55  0038                     _RC0	set	56
    56                           	global	_RC1
    57  0039                     _RC1	set	57
    58                           	global	_RC2
    59  003A                     _RC2	set	58
    60                           	global	_TRISC
    61  0087                     _TRISC	set	135
    62                           	global	_TRISD
    63  0088                     _TRISD	set	136
    64                           	global	_EEADR
    65  010D                     _EEADR	set	269
    66                           	global	_EEDATA
    67  010C                     _EEDATA	set	268
    68                           	global	_EECON2
    69  018D                     _EECON2	set	397
    70                           	global	_EEPGD
    71  0C67                     _EEPGD	set	3175
    72                           	global	_RD
    73  0C60                     _RD	set	3168
    74                           	global	_WR
    75  0C61                     _WR	set	3169
    76                           	global	_WREN
    77  0C62                     _WREN	set	3170
    78                           	file	"program.as"
    79                           	line	#
    80                           psect cinit,class=CODE,delta=2
    81                           global start_initialization
    82  0738                     start_initialization:
    83                           
    84                           psect cinit,class=CODE,delta=2
    85                           global end_of_initialization
    86                           
    87                           ;End of C runtime variable initialization code
    88                           
    89  0738                     end_of_initialization:
    90  0738  0183               clrf status
    91  0739  120A  118A  2F9D   ljmp _main	;jump to C main() function
    92                           psect	cstackCOMMON,class=COMMON,space=1
    93                           global __pcstackCOMMON
    94  0070                     __pcstackCOMMON:
    95                           	global	?_cmd
    96  0070                     ?_cmd:	; 0 bytes @ 0x0
    97                           	global	??_cmd
    98  0070                     ??_cmd:	; 0 bytes @ 0x0
    99                           	global	?_EEPROM_write
   100  0070                     ?_EEPROM_write:	; 0 bytes @ 0x0
   101                           	global	?_dat
   102  0070                     ?_dat:	; 0 bytes @ 0x0
   103                           	global	?_main
   104  0070                     ?_main:	; 0 bytes @ 0x0
   105                           	global	?_EEPROM_read
   106  0070                     ?_EEPROM_read:	; 2 bytes @ 0x0
   107                           	global	dat@dis
   108  0070                     dat@dis:	; 2 bytes @ 0x0
   109                           	global	EEPROM_write@address
   110  0070                     EEPROM_write@address:	; 2 bytes @ 0x0
   111                           	global	EEPROM_read@address
   112  0070                     EEPROM_read@address:	; 2 bytes @ 0x0
   113  0070                     	ds	2
   114                           	global	??_EEPROM_read
   115  0072                     ??_EEPROM_read:	; 0 bytes @ 0x2
   116                           	global	??_dat
   117  0072                     ??_dat:	; 0 bytes @ 0x2
   118                           	global	cmd@a
   119  0072                     cmd@a:	; 1 bytes @ 0x2
   120                           	global	EEPROM_write@data
   121  0072                     EEPROM_write@data:	; 2 bytes @ 0x2
   122  0072                     	ds	2
   123                           	global	??_EEPROM_write
   124  0074                     ??_EEPROM_write:	; 0 bytes @ 0x4
   125                           	global	EEPROM_read@a
   126  0074                     EEPROM_read@a:	; 2 bytes @ 0x4
   127  0074                     	ds	2
   128                           	global	??_main
   129  0076                     ??_main:	; 0 bytes @ 0x6
   130                           	global	main@data
   131  0076                     main@data:	; 2 bytes @ 0x6
   132  0076                     	ds	2
   133 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   134 ;;Auto spaces:   Size  Autos    Used
   135 ;; COMMON          14      8       8
   136 ;; BANK0           80      0       0
   137 ;; BANK1           80      0       0
   138 ;; BANK3           96      0       0
   139 ;; BANK2           96      0       0
   140                           
   141 ;;
   142 ;; Pointer list with targets:
   143                           
   144 ;; ?_EEPROM_read	int  size(1) Largest target is 0
   145 ;;
   146                           
   147                           
   148 ;;
   149 ;; Critical Paths under _main in COMMON
   150 ;;
   151 ;;   _main->_EEPROM_read
   152 ;;
   153 ;; Critical Paths under _main in BANK0
   154 ;;
   155 ;;   None.
   156 ;;
   157 ;; Critical Paths under _main in BANK1
   158 ;;
   159 ;;   None.
   160 ;;
   161 ;; Critical Paths under _main in BANK3
   162 ;;
   163 ;;   None.
   164 ;;
   165 ;; Critical Paths under _main in BANK2
   166 ;;
   167 ;;   None.
   168                           
   169 ;;
   170 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   171 ;;
   172                           
   173 ;;
   174 ;;Call Graph Tables:
   175 ;;
   176 ;; ---------------------------------------------------------------------------------
   177 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   178 ;; ---------------------------------------------------------------------------------
   179 ;; (0) _main                                                 2     2      0     105
   180 ;;                                              6 COMMON     2     2      0
   181 ;;                                _cmd
   182 ;;                       _EEPROM_write
   183 ;;                        _EEPROM_read
   184 ;;                                _dat
   185 ;; ---------------------------------------------------------------------------------
   186 ;; (1) _dat                                                  4     2      2      15
   187 ;;                                              0 COMMON     4     2      2
   188 ;; ---------------------------------------------------------------------------------
   189 ;; (1) _EEPROM_read                                          6     4      2      30
   190 ;;                                              0 COMMON     6     4      2
   191 ;; ---------------------------------------------------------------------------------
   192 ;; (1) _cmd                                                  3     3      0      15
   193 ;;                                              0 COMMON     3     3      0
   194 ;; ---------------------------------------------------------------------------------
   195 ;; (1) _EEPROM_write                                         4     0      4      30
   196 ;;                                              0 COMMON     4     0      4
   197 ;; ---------------------------------------------------------------------------------
   198 ;; Estimated maximum stack depth 1
   199 ;; ---------------------------------------------------------------------------------
   200                           
   201 ;; Call Graph Graphs:
   202                           
   203 ;; _main (ROOT)
   204 ;;   _cmd
   205 ;;   _EEPROM_write
   206 ;;   _EEPROM_read
   207 ;;   _dat
   208 ;;
   209                           
   210 ;; Address spaces:
   211                           
   212 ;;Name               Size   Autos  Total    Cost      Usage
   213 ;;BITCOMMON            E      0       0       0        0.0%
   214 ;;EEDATA             100      0       0       0        0.0%
   215 ;;NULL                 0      0       0       0        0.0%
   216 ;;CODE                 0      0       0       0        0.0%
   217 ;;COMMON               E      8       8       1       57.1%
   218 ;;BITSFR0              0      0       0       1        0.0%
   219 ;;SFR0                 0      0       0       1        0.0%
   220 ;;BITSFR1              0      0       0       2        0.0%
   221 ;;SFR1                 0      0       0       2        0.0%
   222 ;;STACK                0      0       1       2        0.0%
   223 ;;ABS                  0      0       0       3        0.0%
   224 ;;BITBANK0            50      0       0       4        0.0%
   225 ;;BITSFR3              0      0       0       4        0.0%
   226 ;;SFR3                 0      0       0       4        0.0%
   227 ;;BANK0               50      0       0       5        0.0%
   228 ;;BITSFR2              0      0       0       5        0.0%
   229 ;;SFR2                 0      0       0       5        0.0%
   230 ;;BITBANK1            50      0       0       6        0.0%
   231 ;;BANK1               50      0       0       7        0.0%
   232 ;;BITBANK3            60      0       0       8        0.0%
   233 ;;BANK3               60      0       0       9        0.0%
   234 ;;BITBANK2            60      0       0      10        0.0%
   235 ;;BANK2               60      0       0      11        0.0%
   236 ;;DATA                 0      0       0      12        0.0%
   237                           
   238                           	global	_main
   239                           psect	maintext,global,class=CODE,delta=2
   240                           global __pmaintext
   241  079D                     __pmaintext:
   242                           
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 10 in file "C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  data            2    6[COMMON] int 
   250 ;; Return value:  Size  Location     Type
   251 ;;		None               void
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, pclath, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 17F/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   259 ;;      Params:         0       0       0       0       0
   260 ;;      Locals:         2       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0
   262 ;;      Totals:         2       0       0       0       0
   263 ;;Total ram usage:        2 bytes
   264 ;; Hardware stack levels required when called:    1
   265 ;; This function calls:
   266 ;;		_cmd
   267 ;;		_EEPROM_write
   268 ;;		_EEPROM_read
   269 ;;		_dat
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           psect	maintext
   275                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   276                           	line	10
   277                           	global	__size_of_main
   278  0063                     	__size_of_main	equ	__end_of_main-_main
   279                           	
   280  079D                     _main:	
   281                           	opt	stack 7
   282                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   283                           	line	11
   284                           	
   285  079D                     l1780:	
   286                           ;program.c: 11: TRISC =0x00;
   287  079D  1683               	bsf	status, 5	;RP0=1, select bank1
   288  079E  1303               	bcf	status, 6	;RP1=0, select bank1
   289  079F  0187               	clrf	(135)^080h	;volatile
   290                           	line	12
   291                           ;program.c: 12: PORTC =0x00;
   292  07A0  1283               	bcf	status, 5	;RP0=0, select bank0
   293  07A1  1303               	bcf	status, 6	;RP1=0, select bank0
   294  07A2  0187               	clrf	(7)	;volatile
   295                           	line	13
   296                           ;program.c: 13: TRISD =0x00;
   297  07A3  1683               	bsf	status, 5	;RP0=1, select bank1
   298  07A4  1303               	bcf	status, 6	;RP1=0, select bank1
   299  07A5  0188               	clrf	(136)^080h	;volatile
   300                           	line	14
   301                           ;program.c: 14: PORTD =0x00;
   302  07A6  1283               	bcf	status, 5	;RP0=0, select bank0
   303  07A7  1303               	bcf	status, 6	;RP1=0, select bank0
   304  07A8  0188               	clrf	(8)	;volatile
   305                           	line	15
   306                           	
   307  07A9                     l1782:	
   308                           ;program.c: 15: cmd(0x38);
   309  07A9  3038               	movlw	(038h)
   310  07AA  120A  118A  2750   	fcall	_cmd
              120A  118A         
   311                           	line	16
   312                           	
   313  07AF                     l1784:	
   314                           ;program.c: 16: cmd(0x0C);
   315  07AF  300C               	movlw	(0Ch)
   316  07B0  120A  118A  2750   	fcall	_cmd
              120A  118A         
   317                           	line	17
   318                           	
   319  07B5                     l1786:	
   320                           ;program.c: 17: cmd(0x10);
   321  07B5  3010               	movlw	(010h)
   322  07B6  120A  118A  2750   	fcall	_cmd
              120A  118A         
   323                           	line	18
   324                           	
   325  07BB                     l1788:	
   326                           ;program.c: 18: cmd(0x06);
   327  07BB  3006               	movlw	(06h)
   328  07BC  120A  118A  2750   	fcall	_cmd
              120A  118A         
   329                           	line	19
   330                           	
   331  07C1                     l1790:	
   332                           ;program.c: 19: cmd(0x80);
   333  07C1  3080               	movlw	(080h)
   334  07C2  120A  118A  2750   	fcall	_cmd
              120A  118A         
   335                           	line	20
   336                           	
   337  07C7                     l1792:	
   338                           ;program.c: 20: cmd(0xC0);
   339  07C7  30C0               	movlw	(0C0h)
   340  07C8  120A  118A  2750   	fcall	_cmd
              120A  118A         
   341  07CD  2FCE               	goto	l1794
   342                           	line	21
   343                           ;program.c: 21: while (1){
   344                           	
   345  07CE                     l569:	
   346                           	line	22
   347                           	
   348  07CE                     l1794:	
   349                           ;program.c: 22: cmd(0x80);
   350  07CE  3080               	movlw	(080h)
   351  07CF  120A  118A  2750   	fcall	_cmd
              120A  118A         
   352                           	line	24
   353                           	
   354  07D4                     l1796:	
   355                           ;program.c: 23: int data;
   356                           ;program.c: 24: EEPROM_write(0x00,'2');
   357  07D4  3000               	movlw	low(0)
   358  07D5  00F0               	movwf	(?_EEPROM_write)
   359  07D6  3000               	movlw	high(0)
   360  07D7  00F1               	movwf	((?_EEPROM_write))+1
   361  07D8  3032               	movlw	low(032h)
   362  07D9  00F2               	movwf	0+(?_EEPROM_write)+02h
   363  07DA  3000               	movlw	high(032h)
   364  07DB  00F3               	movwf	(0+(?_EEPROM_write)+02h)+1
   365  07DC  120A  118A  2765   	fcall	_EEPROM_write
              120A  118A         
   366                           	line	25
   367                           	
   368  07E1                     l1798:	
   369                           ;program.c: 25: data=EEPROM_read(0x00);
   370  07E1  3000               	movlw	low(0)
   371  07E2  00F0               	movwf	(?_EEPROM_read)
   372  07E3  3000               	movlw	high(0)
   373  07E4  00F1               	movwf	((?_EEPROM_read))+1
   374  07E5  120A  118A  277B   	fcall	_EEPROM_read
              120A  118A         
   375  07EA  0871               	movf	(1+(?_EEPROM_read)),w
   376  07EB  01F7               	clrf	(main@data+1)
   377  07EC  07F7               	addwf	(main@data+1)
   378  07ED  0870               	movf	(0+(?_EEPROM_read)),w
   379  07EE  01F6               	clrf	(main@data)
   380  07EF  07F6               	addwf	(main@data)
   381                           
   382                           	line	26
   383                           	
   384  07F0                     l1800:	
   385                           ;program.c: 26: dat(data);}}
   386  07F0  0877               	movf	(main@data+1),w
   387  07F1  01F1               	clrf	(?_dat+1)
   388  07F2  07F1               	addwf	(?_dat+1)
   389  07F3  0876               	movf	(main@data),w
   390  07F4  01F0               	clrf	(?_dat)
   391  07F5  07F0               	addwf	(?_dat)
   392                           
   393  07F6  120A  118A  273C   	fcall	_dat
              120A  118A         
   394  07FB  2FCE               	goto	l1794
   395                           	
   396  07FC                     l570:	
   397                           	line	21
   398  07FC  2FCE               	goto	l1794
   399                           	
   400  07FD                     l571:	
   401                           	line	26
   402                           	
   403  07FD                     l572:	
   404                           	global	start
   405  07FD  120A  118A  2800   	ljmp	start
   406                           	opt stack 0
   407                           GLOBAL	__end_of_main
   408  0800                     	__end_of_main:
   409 ;; =============== function _main ends ============
   410                           
   411                           	signat	_main,88
   412                           	global	_dat
   413                           psect	text97,local,class=CODE,delta=2
   414                           global __ptext97
   415  073C                     __ptext97:
   416                           
   417 ;; *************** function _dat *****************
   418 ;; Defined at:
   419 ;;		line 36 in file "C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;  dis             2    0[COMMON] int 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;		None               void
   426 ;; Registers used:
   427 ;;		wreg
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         2       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          2       0       0       0       0
   436 ;;      Totals:         4       0       0       0       0
   437 ;;Total ram usage:        4 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           psect	text97
   446                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   447                           	line	36
   448                           	global	__size_of_dat
   449  0014                     	__size_of_dat	equ	__end_of_dat-_dat
   450                           	
   451  073C                     _dat:	
   452                           	opt	stack 7
   453                           ; Regs used in _dat: [wreg]
   454                           	line	37
   455                           	
   456  073C                     l1770:	
   457                           ;program.c: 37: PORTD=dis;
   458  073C  0870               	movf	(dat@dis),w
   459  073D  1283               	bcf	status, 5	;RP0=0, select bank0
   460  073E  1303               	bcf	status, 6	;RP1=0, select bank0
   461  073F  0088               	movwf	(8)	;volatile
   462                           	line	38
   463                           	
   464  0740                     l1772:	
   465                           ;program.c: 38: RC0=1;
   466  0740  1407               	bsf	(56/8),(56)&7
   467                           	line	39
   468                           	
   469  0741                     l1774:	
   470                           ;program.c: 39: RC1=0;
   471  0741  1087               	bcf	(57/8),(57)&7
   472                           	line	40
   473                           ;program.c: 40: _delay((unsigned long)((5)*(20000000/4000.0)));
   474                           	opt asmopt_off
   475  0742  3021               movlw	33
   476  0743  00F3               movwf	((??_dat+0)+0+1),f
   477  0744  3076               	movlw	118
   478  0745  00F2               movwf	((??_dat+0)+0),f
   479  0746                     u2157:
   480  0746  0BF2               	decfsz	((??_dat+0)+0),f
   481  0747  2F46               	goto	u2157
   482  0748  0BF3               	decfsz	((??_dat+0)+0+1),f
   483  0749  2F46               	goto	u2157
   484  074A  0064               	clrwdt
   485                           opt asmopt_on
   486                           
   487                           	line	41
   488                           	
   489  074B                     l1776:	
   490                           ;program.c: 41: RC2=1;
   491  074B  1283               	bcf	status, 5	;RP0=0, select bank0
   492  074C  1303               	bcf	status, 6	;RP1=0, select bank0
   493  074D  1507               	bsf	(58/8),(58)&7
   494                           	line	42
   495                           	
   496  074E                     l1778:	
   497                           ;program.c: 42: RC2=0;}
   498  074E  1107               	bcf	(58/8),(58)&7
   499                           	
   500  074F                     l578:	
   501  074F  0008               	return
   502                           	opt stack 0
   503                           GLOBAL	__end_of_dat
   504  0750                     	__end_of_dat:
   505 ;; =============== function _dat ends ============
   506                           
   507                           	signat	_dat,4216
   508                           	global	_EEPROM_read
   509                           psect	text98,local,class=CODE,delta=2
   510                           global __ptext98
   511  077B                     __ptext98:
   512                           
   513 ;; *************** function _EEPROM_read *****************
   514 ;; Defined at:
   515 ;;		line 55 in file "C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  address         2    0[COMMON] int 
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  a               2    4[COMMON] int 
   520 ;; Return value:  Size  Location     Type
   521 ;;                  2    0[COMMON] int 
   522 ;; Registers used:
   523 ;;		wreg, status,2, status,0
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   529 ;;      Params:         2       0       0       0       0
   530 ;;      Locals:         2       0       0       0       0
   531 ;;      Temps:          2       0       0       0       0
   532 ;;      Totals:         6       0       0       0       0
   533 ;;Total ram usage:        6 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; This function calls:
   536 ;;		Nothing
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           psect	text98
   542                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   543                           	line	55
   544                           	global	__size_of_EEPROM_read
   545  0022                     	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
   546                           	
   547  077B                     _EEPROM_read:	
   548                           	opt	stack 7
   549                           ; Regs used in _EEPROM_read: [wreg+status,2+status,0]
   550                           	line	57
   551                           	
   552  077B                     l1760:	
   553                           ;program.c: 56: int a;
   554                           ;program.c: 57: EEADR=address;
   555  077B  0870               	movf	(EEPROM_read@address),w
   556  077C  1283               	bcf	status, 5	;RP0=0, select bank2
   557  077D  1703               	bsf	status, 6	;RP1=1, select bank2
   558  077E  008D               	movwf	(269)^0100h	;volatile
   559                           	line	58
   560                           	
   561  077F                     l1762:	
   562                           ;program.c: 58: EEPGD=0;
   563  077F  1683               	bsf	status, 5	;RP0=1, select bank3
   564  0780  1703               	bsf	status, 6	;RP1=1, select bank3
   565  0781  138C               	bcf	(3175/8)^0180h,(3175)&7
   566                           	line	59
   567                           	
   568  0782                     l1764:	
   569                           ;program.c: 59: RD=1;
   570  0782  140C               	bsf	(3168/8)^0180h,(3168)&7
   571                           	line	60
   572                           ;program.c: 60: a=EEDATA;
   573  0783  1283               	bcf	status, 5	;RP0=0, select bank2
   574  0784  1703               	bsf	status, 6	;RP1=1, select bank2
   575  0785  080C               	movf	(268)^0100h,w	;volatile
   576  0786  00F2               	movwf	(??_EEPROM_read+0)+0
   577  0787  01F3               	clrf	(??_EEPROM_read+0)+0+1
   578  0788  0872               	movf	0+(??_EEPROM_read+0)+0,w
   579  0789  00F4               	movwf	(EEPROM_read@a)
   580  078A  0873               	movf	1+(??_EEPROM_read+0)+0,w
   581  078B  00F5               	movwf	(EEPROM_read@a+1)
   582                           	line	61
   583                           ;program.c: 61: _delay((unsigned long)((5)*(20000000/4000.0)));
   584                           	opt asmopt_off
   585  078C  3021               movlw	33
   586  078D  00F3               movwf	((??_EEPROM_read+0)+0+1),f
   587  078E  3076               	movlw	118
   588  078F  00F2               movwf	((??_EEPROM_read+0)+0),f
   589  0790                     u2167:
   590  0790  0BF2               	decfsz	((??_EEPROM_read+0)+0),f
   591  0791  2F90               	goto	u2167
   592  0792  0BF3               	decfsz	((??_EEPROM_read+0)+0+1),f
   593  0793  2F90               	goto	u2167
   594  0794  0064               	clrwdt
   595                           opt asmopt_on
   596                           
   597                           	line	62
   598                           	
   599  0795                     l1766:	
   600                           ;program.c: 62: return a;}
   601  0795  0875               	movf	(EEPROM_read@a+1),w
   602  0796  01F1               	clrf	(?_EEPROM_read+1)
   603  0797  07F1               	addwf	(?_EEPROM_read+1)
   604  0798  0874               	movf	(EEPROM_read@a),w
   605  0799  01F0               	clrf	(?_EEPROM_read)
   606  079A  07F0               	addwf	(?_EEPROM_read)
   607                           
   608  079B  2F9C               	goto	l587
   609                           	
   610  079C                     l1768:	
   611                           	
   612  079C                     l587:	
   613  079C  0008               	return
   614                           	opt stack 0
   615                           GLOBAL	__end_of_EEPROM_read
   616  079D                     	__end_of_EEPROM_read:
   617 ;; =============== function _EEPROM_read ends ============
   618                           
   619                           	signat	_EEPROM_read,4218
   620                           	global	_cmd
   621                           psect	text99,local,class=CODE,delta=2
   622                           global __ptext99
   623  0750                     __ptext99:
   624                           
   625 ;; *************** function _cmd *****************
   626 ;; Defined at:
   627 ;;		line 28 in file "C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  a               1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  a               1    2[COMMON] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;		None               void
   634 ;; Registers used:
   635 ;;		wreg
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0
   643 ;;      Temps:          2       0       0       0       0
   644 ;;      Totals:         3       0       0       0       0
   645 ;;Total ram usage:        3 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           psect	text99
   654                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   655                           	line	28
   656                           	global	__size_of_cmd
   657  0015                     	__size_of_cmd	equ	__end_of_cmd-_cmd
   658                           	
   659  0750                     _cmd:	
   660                           	opt	stack 7
   661                           ; Regs used in _cmd: [wreg]
   662                           ;cmd@a stored from wreg
   663  0750  00F2               	movwf	(cmd@a)
   664                           	line	29
   665                           	
   666  0751                     l1750:	
   667                           ;program.c: 29: PORTD=a;
   668  0751  0872               	movf	(cmd@a),w
   669  0752  1283               	bcf	status, 5	;RP0=0, select bank0
   670  0753  1303               	bcf	status, 6	;RP1=0, select bank0
   671  0754  0088               	movwf	(8)	;volatile
   672                           	line	30
   673                           	
   674  0755                     l1752:	
   675                           ;program.c: 30: RC0=0;
   676  0755  1007               	bcf	(56/8),(56)&7
   677                           	line	31
   678                           	
   679  0756                     l1754:	
   680                           ;program.c: 31: RC1=0;
   681  0756  1087               	bcf	(57/8),(57)&7
   682                           	line	32
   683                           ;program.c: 32: _delay((unsigned long)((10)*(20000000/4000.0)));
   684                           	opt asmopt_off
   685  0757  3041               movlw	65
   686  0758  00F1               movwf	((??_cmd+0)+0+1),f
   687  0759  30EE               	movlw	238
   688  075A  00F0               movwf	((??_cmd+0)+0),f
   689  075B                     u2177:
   690  075B  0BF0               	decfsz	((??_cmd+0)+0),f
   691  075C  2F5B               	goto	u2177
   692  075D  0BF1               	decfsz	((??_cmd+0)+0+1),f
   693  075E  2F5B               	goto	u2177
   694  075F  0064               	clrwdt
   695                           opt asmopt_on
   696                           
   697                           	line	33
   698                           	
   699  0760                     l1756:	
   700                           ;program.c: 33: RC2=1;
   701  0760  1283               	bcf	status, 5	;RP0=0, select bank0
   702  0761  1303               	bcf	status, 6	;RP1=0, select bank0
   703  0762  1507               	bsf	(58/8),(58)&7
   704                           	line	34
   705                           	
   706  0763                     l1758:	
   707                           ;program.c: 34: RC2=0;}
   708  0763  1107               	bcf	(58/8),(58)&7
   709                           	
   710  0764                     l575:	
   711  0764  0008               	return
   712                           	opt stack 0
   713                           GLOBAL	__end_of_cmd
   714  0765                     	__end_of_cmd:
   715 ;; =============== function _cmd ends ============
   716                           
   717                           	signat	_cmd,4216
   718                           	global	_EEPROM_write
   719                           psect	text100,local,class=CODE,delta=2
   720                           global __ptext100
   721  0765                     __ptext100:
   722                           
   723 ;; *************** function _EEPROM_write *****************
   724 ;; Defined at:
   725 ;;		line 44 in file "C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  address         2    0[COMMON] int 
   728 ;;  data            2    2[COMMON] int 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;		None               void
   733 ;; Registers used:
   734 ;;		wreg
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         4       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0
   743 ;;      Totals:         4       0       0       0       0
   744 ;;Total ram usage:        4 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           psect	text100
   753                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with LCD\program.c"
   754                           	line	44
   755                           	global	__size_of_EEPROM_write
   756  0016                     	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
   757                           	
   758  0765                     _EEPROM_write:	
   759                           	opt	stack 7
   760                           ; Regs used in _EEPROM_write: [wreg]
   761                           	line	45
   762                           	
   763  0765                     l956:	
   764                           ;program.c: 45: EEADR=address;
   765  0765  0870               	movf	(EEPROM_write@address),w
   766  0766  1283               	bcf	status, 5	;RP0=0, select bank2
   767  0767  1703               	bsf	status, 6	;RP1=1, select bank2
   768  0768  008D               	movwf	(269)^0100h	;volatile
   769                           	line	46
   770                           ;program.c: 46: EEDATA=data;
   771  0769  0872               	movf	(EEPROM_write@data),w
   772  076A  008C               	movwf	(268)^0100h	;volatile
   773                           	line	47
   774                           	
   775  076B                     l958:	
   776                           ;program.c: 47: EEPGD=0;
   777  076B  1683               	bsf	status, 5	;RP0=1, select bank3
   778  076C  1703               	bsf	status, 6	;RP1=1, select bank3
   779  076D  138C               	bcf	(3175/8)^0180h,(3175)&7
   780                           	line	48
   781                           	
   782  076E                     l960:	
   783                           ;program.c: 48: WREN=1;
   784  076E  150C               	bsf	(3170/8)^0180h,(3170)&7
   785                           	line	49
   786                           ;program.c: 49: EECON2=0x55;
   787  076F  3055               	movlw	(055h)
   788  0770  008D               	movwf	(397)^0180h	;volatile
   789                           	line	50
   790                           ;program.c: 50: EECON2=0xAA;
   791  0771  30AA               	movlw	(0AAh)
   792  0772  008D               	movwf	(397)^0180h	;volatile
   793                           	line	51
   794                           	
   795  0773                     l962:	
   796                           ;program.c: 51: WR=1;
   797  0773  148C               	bsf	(3169/8)^0180h,(3169)&7
   798                           	line	52
   799                           ;program.c: 52: while(WR==1);
   800  0774  2F75               	goto	l581
   801                           	
   802  0775                     l582:	
   803                           	
   804  0775                     l581:	
   805  0775  188C               	btfsc	(3169/8)^0180h,(3169)&7
   806  0776  2F78               	goto	u11
   807  0777  2F79               	goto	u10
   808  0778                     u11:
   809  0778  2F75               	goto	l581
   810  0779                     u10:
   811                           	
   812  0779                     l583:	
   813                           	line	53
   814                           ;program.c: 53: WREN=0;}
   815  0779  110C               	bcf	(3170/8)^0180h,(3170)&7
   816                           	
   817  077A                     l584:	
   818  077A  0008               	return
   819                           	opt stack 0
   820                           GLOBAL	__end_of_EEPROM_write
   821  077B                     	__end_of_EEPROM_write:
   822 ;; =============== function _EEPROM_write ends ============
   823                           
   824                           	signat	_EEPROM_write,8312
   825                           psect	text101,local,class=CODE,delta=2
   826                           global __ptext101
   827  0000                     __ptext101:
   828                           	global	btemp
   829  007E                     	btemp set 07Eh
   830                           
   831                           	DABS	1,126,2	;btemp
   832                           	global	wtemp0
   833  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Wed Feb 26 13:25:39 2025

                   _RD 0C60                     u10 0779                     u11 0778                     _WR 0C61  
   EEPROM_read@address 0070                    l570 07FC                    l571 07FD                    l572 07FD  
                  l581 0775                    l582 0775                    l583 0779                    l575 0764  
                  l584 077A                    l569 07CE                    l578 074F                    l587 079C  
                  l960 076E                    l962 0773                    l956 0765                    l958 076B  
                  _RC0 0038                    _RC1 0039                    _RC2 003A                    _dat 073C  
                  _cmd 0750                   ?_dat 0070                   ?_cmd 0070                   l1800 07F0  
                 l1750 0751                   l1752 0755                   l1760 077B                   l1754 0756  
                 l1762 077F                   l1770 073C                   l1756 0760                   l1764 0782  
                 l1772 0740                   l1780 079D                   l1758 0763                   l1766 0795  
                 l1774 0741                   l1790 07C1                   l1782 07A9                   l1768 079C  
                 l1776 074B                   l1792 07C7                   l1784 07AF                   l1778 074E  
                 l1794 07CE                   l1786 07B5                   l1796 07D4                   l1788 07BB  
                 l1798 07E1                   u2157 0746                   u2167 0790                   u2177 075B  
                 _WREN 0C62                   cmd@a 0072                   _main 079D                   btemp 007E  
                 start 0000                  ??_dat 0072                  ??_cmd 0070   __end_of_EEPROM_write 077B  
                ?_main 0070                  _EEADR 010D                  _EEPGD 0C67                  _PORTC 0007  
                _PORTD 0008                  _TRISC 0087                  _TRISD 0088                  status 0003  
                wtemp0 007E   __size_of_EEPROM_read 0022           __end_of_main 0800                 ??_main 0076  
  EEPROM_write@address 0070                 _EEDATA 010C                 _EECON2 018D                 dat@dis 0070  
       __pcstackCOMMON 0070  __size_of_EEPROM_write 0016           _EEPROM_write 0765             __pmaintext 079D  
     EEPROM_write@data 0072           __size_of_dat 0014           __size_of_cmd 0015   end_of_initialization 0738  
        ??_EEPROM_read 0072    __end_of_EEPROM_read 079D    start_initialization 0738            __end_of_dat 0750  
          __end_of_cmd 0765            _EEPROM_read 077B              __ptext100 0765              __ptext101 0000  
         EEPROM_read@a 0074               __ptext96 0000               __ptext97 073C               __ptext98 077B  
             __ptext99 0750          ?_EEPROM_write 0070          __size_of_main 0063               main@data 0076  
       ??_EEPROM_write 0074           ?_EEPROM_read 0070  
