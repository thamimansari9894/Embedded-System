

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Fri Apr 25 15:14:18 2025

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_write
    43                           	FNCALL	_main,_read
    44                           	FNCALL	_read,_SPI
    45                           	FNCALL	_write,_SPI
    46                           	FNROOT	_main
    47                           	global	_PORTB
    48                           psect	text84,local,class=CODE,delta=2
    49                           global __ptext84
    50  0000                     __ptext84:
    51  0006                     _PORTB	set	6
    52                           	global	_PORTC
    53  0007                     _PORTC	set	7
    54                           	global	_SSPBUF
    55  0013                     _SSPBUF	set	19
    56                           	global	_SSPCON
    57  0014                     _SSPCON	set	20
    58                           	global	_RC2
    59  003A                     _RC2	set	58
    60                           	global	_SSPIF
    61  0063                     _SSPIF	set	99
    62                           	global	_SSPSTAT
    63  0094                     _SSPSTAT	set	148
    64                           	global	_TRISB
    65  0086                     _TRISB	set	134
    66                           	global	_TRISC
    67  0087                     _TRISC	set	135
    68                           	file	"program.as"
    69                           	line	#
    70                           psect cinit,class=CODE,delta=2
    71                           global start_initialization
    72  06A5                     start_initialization:
    73                           
    74                           psect cinit,class=CODE,delta=2
    75                           global end_of_initialization
    76                           
    77                           ;End of C runtime variable initialization code
    78                           
    79  06A5                     end_of_initialization:
    80  06A5  0183               clrf status
    81  06A6  120A  118A  2F41   ljmp _main	;jump to C main() function
    82                           psect	cstackCOMMON,class=COMMON,space=1
    83                           global __pcstackCOMMON
    84  0070                     __pcstackCOMMON:
    85                           	global	?_main
    86  0070                     ?_main:	; 0 bytes @ 0x0
    87                           	global	?_SPI
    88  0070                     ?_SPI:	; 0 bytes @ 0x0
    89                           	global	SPI@data
    90  0070                     SPI@data:	; 2 bytes @ 0x0
    91  0070                     	ds	2
    92                           	global	?_write
    93  0072                     ?_write:	; 0 bytes @ 0x2
    94                           	global	?_read
    95  0072                     ?_read:	; 0 bytes @ 0x2
    96                           	global	??_SPI
    97  0072                     ??_SPI:	; 0 bytes @ 0x2
    98                           	global	write@high
    99  0072                     write@high:	; 2 bytes @ 0x2
   100                           	global	read@high
   101  0072                     read@high:	; 2 bytes @ 0x2
   102  0072                     	ds	2
   103                           	global	write@low
   104  0074                     write@low:	; 2 bytes @ 0x4
   105                           	global	read@low
   106  0074                     read@low:	; 2 bytes @ 0x4
   107  0074                     	ds	2
   108                           	global	??_read
   109  0076                     ??_read:	; 0 bytes @ 0x6
   110                           	global	write@data
   111  0076                     write@data:	; 2 bytes @ 0x6
   112  0076                     	ds	2
   113                           	global	??_write
   114  0078                     ??_write:	; 0 bytes @ 0x8
   115  0078                     	ds	3
   116                           	global	??_main
   117  007B                     ??_main:	; 0 bytes @ 0xB
   118  007B                     	ds	3
   119 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   120 ;;Auto spaces:   Size  Autos    Used
   121 ;; COMMON          14     14      14
   122 ;; BANK0           80      0       0
   123 ;; BANK1           80      0       0
   124 ;; BANK3           96      0       0
   125 ;; BANK2           96      0       0
   126                           
   127 ;;
   128 ;; Pointer list with targets:
   129                           
   130                           
   131                           
   132 ;;
   133 ;; Critical Paths under _main in COMMON
   134 ;;
   135 ;;   _main->_write
   136 ;;   _read->_SPI
   137 ;;   _write->_SPI
   138 ;;
   139 ;; Critical Paths under _main in BANK0
   140 ;;
   141 ;;   None.
   142 ;;
   143 ;; Critical Paths under _main in BANK1
   144 ;;
   145 ;;   None.
   146 ;;
   147 ;; Critical Paths under _main in BANK3
   148 ;;
   149 ;;   None.
   150 ;;
   151 ;; Critical Paths under _main in BANK2
   152 ;;
   153 ;;   None.
   154                           
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   157 ;;
   158                           
   159 ;;
   160 ;;Call Graph Tables:
   161 ;;
   162 ;; ---------------------------------------------------------------------------------
   163 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   164 ;; ---------------------------------------------------------------------------------
   165 ;; (0) _main                                                 3     3      0     105
   166 ;;                                             11 COMMON     3     3      0
   167 ;;                              _write
   168 ;;                               _read
   169 ;; ---------------------------------------------------------------------------------
   170 ;; (1) _read                                                 7     3      4      45
   171 ;;                                              2 COMMON     7     3      4
   172 ;;                                _SPI
   173 ;; ---------------------------------------------------------------------------------
   174 ;; (1) _write                                                9     3      6      60
   175 ;;                                              2 COMMON     9     3      6
   176 ;;                                _SPI
   177 ;; ---------------------------------------------------------------------------------
   178 ;; (2) _SPI                                                  2     0      2      15
   179 ;;                                              0 COMMON     2     0      2
   180 ;; ---------------------------------------------------------------------------------
   181 ;; Estimated maximum stack depth 2
   182 ;; ---------------------------------------------------------------------------------
   183                           
   184 ;; Call Graph Graphs:
   185                           
   186 ;; _main (ROOT)
   187 ;;   _write
   188 ;;     _SPI
   189 ;;   _read
   190 ;;     _SPI
   191 ;;
   192                           
   193 ;; Address spaces:
   194                           
   195 ;;Name               Size   Autos  Total    Cost      Usage
   196 ;;BITCOMMON            E      0       0       0        0.0%
   197 ;;EEDATA             100      0       0       0        0.0%
   198 ;;NULL                 0      0       0       0        0.0%
   199 ;;CODE                 0      0       0       0        0.0%
   200 ;;COMMON               E      E       E       1      100.0%
   201 ;;BITSFR0              0      0       0       1        0.0%
   202 ;;SFR0                 0      0       0       1        0.0%
   203 ;;BITSFR1              0      0       0       2        0.0%
   204 ;;SFR1                 0      0       0       2        0.0%
   205 ;;STACK                0      0       2       2        0.0%
   206 ;;ABS                  0      0       0       3        0.0%
   207 ;;BITBANK0            50      0       0       4        0.0%
   208 ;;BITSFR3              0      0       0       4        0.0%
   209 ;;SFR3                 0      0       0       4        0.0%
   210 ;;BANK0               50      0       0       5        0.0%
   211 ;;BITSFR2              0      0       0       5        0.0%
   212 ;;SFR2                 0      0       0       5        0.0%
   213 ;;BITBANK1            50      0       0       6        0.0%
   214 ;;BANK1               50      0       0       7        0.0%
   215 ;;BITBANK3            60      0       0       8        0.0%
   216 ;;BANK3               60      0       0       9        0.0%
   217 ;;BITBANK2            60      0       0      10        0.0%
   218 ;;BANK2               60      0       0      11        0.0%
   219 ;;DATA                 0      0       0      12        0.0%
   220                           
   221                           	global	_main
   222                           psect	maintext,global,class=CODE,delta=2
   223                           global __pmaintext
   224  0741                     __pmaintext:
   225                           
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 6 in file "D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;		None               void
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 17F/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          3       0       0       0       0
   245 ;;      Totals:         3       0       0       0       0
   246 ;;Total ram usage:        3 bytes
   247 ;; Hardware stack levels required when called:    2
   248 ;; This function calls:
   249 ;;		_write
   250 ;;		_read
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           psect	maintext
   256                           	file	"D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   257                           	line	6
   258                           	global	__size_of_main
   259  00BF                     	__size_of_main	equ	__end_of_main-_main
   260                           	
   261  0741                     _main:	
   262                           	opt	stack 6
   263                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   264                           	line	7
   265                           	
   266  0741                     l1775:	
   267                           ;program.c: 7: PORTC=0x00;
   268  0741  1283               	bcf	status, 5	;RP0=0, select bank0
   269  0742  1303               	bcf	status, 6	;RP1=0, select bank0
   270  0743  0187               	clrf	(7)	;volatile
   271                           	line	8
   272                           	
   273  0744                     l1777:	
   274                           ;program.c: 8: TRISC=0x10;
   275  0744  3010               	movlw	(010h)
   276  0745  1683               	bsf	status, 5	;RP0=1, select bank1
   277  0746  1303               	bcf	status, 6	;RP1=0, select bank1
   278  0747  0087               	movwf	(135)^080h	;volatile
   279                           	line	9
   280                           	
   281  0748                     l1779:	
   282                           ;program.c: 9: PORTB=0x00;
   283  0748  1283               	bcf	status, 5	;RP0=0, select bank0
   284  0749  1303               	bcf	status, 6	;RP1=0, select bank0
   285  074A  0186               	clrf	(6)	;volatile
   286                           	line	10
   287                           	
   288  074B                     l1781:	
   289                           ;program.c: 10: TRISB=0x00;
   290  074B  1683               	bsf	status, 5	;RP0=1, select bank1
   291  074C  1303               	bcf	status, 6	;RP1=0, select bank1
   292  074D  0186               	clrf	(134)^080h	;volatile
   293                           	line	11
   294                           	
   295  074E                     l1783:	
   296                           ;program.c: 11: SSPSTAT=0x00;
   297  074E  0194               	clrf	(148)^080h	;volatile
   298                           	line	12
   299                           ;program.c: 12: SSPCON=0x21;
   300  074F  3021               	movlw	(021h)
   301  0750  1283               	bcf	status, 5	;RP0=0, select bank0
   302  0751  1303               	bcf	status, 6	;RP1=0, select bank0
   303  0752  0094               	movwf	(20)	;volatile
   304                           	line	14
   305                           	
   306  0753                     l1785:	
   307                           ;program.c: 14: write(0x00,0x08,'A');
   308  0753  3000               	movlw	low(0)
   309  0754  00F2               	movwf	(?_write)
   310  0755  3000               	movlw	high(0)
   311  0756  00F3               	movwf	((?_write))+1
   312  0757  3008               	movlw	low(08h)
   313  0758  00F4               	movwf	0+(?_write)+02h
   314  0759  3000               	movlw	high(08h)
   315  075A  00F5               	movwf	(0+(?_write)+02h)+1
   316  075B  3041               	movlw	low(041h)
   317  075C  00F6               	movwf	0+(?_write)+04h
   318  075D  3000               	movlw	high(041h)
   319  075E  00F7               	movwf	(0+(?_write)+04h)+1
   320  075F  120A  118A  26F3   	fcall	_write
              120A  118A         
   321                           	line	15
   322                           	
   323  0764                     l1787:	
   324                           ;program.c: 15: _delay((unsigned long)((2000)*(10000000/4000.0)));
   325                           	opt asmopt_off
   326  0764  301A               movlw  26
   327  0765  00FD               movwf	((??_main+0)+0+2),f
   328  0766  3045               movlw	69
   329  0767  00FC               movwf	((??_main+0)+0+1),f
   330  0768  307E               	movlw	126
   331  0769  00FB               movwf	((??_main+0)+0),f
   332  076A                     u2157:
   333  076A  0BFB               	decfsz	((??_main+0)+0),f
   334  076B  2F6A               	goto	u2157
   335  076C  0BFC               	decfsz	((??_main+0)+0+1),f
   336  076D  2F6A               	goto	u2157
   337  076E  0BFD               	decfsz	((??_main+0)+0+2),f
   338  076F  2F6A               	goto	u2157
   339                           opt asmopt_on
   340                           
   341                           	line	16
   342                           ;program.c: 16: read(0x00,0x08);
   343  0770  3000               	movlw	low(0)
   344  0771  00F2               	movwf	(?_read)
   345  0772  3000               	movlw	high(0)
   346  0773  00F3               	movwf	((?_read))+1
   347  0774  3008               	movlw	low(08h)
   348  0775  00F4               	movwf	0+(?_read)+02h
   349  0776  3000               	movlw	high(08h)
   350  0777  00F5               	movwf	(0+(?_read)+02h)+1
   351  0778  120A  118A  26B4   	fcall	_read
              120A  118A         
   352                           	line	17
   353                           ;program.c: 17: write(0x00,0x09,'B');
   354  077D  3000               	movlw	low(0)
   355  077E  00F2               	movwf	(?_write)
   356  077F  3000               	movlw	high(0)
   357  0780  00F3               	movwf	((?_write))+1
   358  0781  3009               	movlw	low(09h)
   359  0782  00F4               	movwf	0+(?_write)+02h
   360  0783  3000               	movlw	high(09h)
   361  0784  00F5               	movwf	(0+(?_write)+02h)+1
   362  0785  3042               	movlw	low(042h)
   363  0786  00F6               	movwf	0+(?_write)+04h
   364  0787  3000               	movlw	high(042h)
   365  0788  00F7               	movwf	(0+(?_write)+04h)+1
   366  0789  120A  118A  26F3   	fcall	_write
              120A  118A         
   367                           	line	18
   368                           	
   369  078E                     l1789:	
   370                           ;program.c: 18: _delay((unsigned long)((2000)*(10000000/4000.0)));
   371                           	opt asmopt_off
   372  078E  301A               movlw  26
   373  078F  00FD               movwf	((??_main+0)+0+2),f
   374  0790  3045               movlw	69
   375  0791  00FC               movwf	((??_main+0)+0+1),f
   376  0792  307E               	movlw	126
   377  0793  00FB               movwf	((??_main+0)+0),f
   378  0794                     u2167:
   379  0794  0BFB               	decfsz	((??_main+0)+0),f
   380  0795  2F94               	goto	u2167
   381  0796  0BFC               	decfsz	((??_main+0)+0+1),f
   382  0797  2F94               	goto	u2167
   383  0798  0BFD               	decfsz	((??_main+0)+0+2),f
   384  0799  2F94               	goto	u2167
   385                           opt asmopt_on
   386                           
   387                           	line	19
   388                           	
   389  079A                     l1791:	
   390                           ;program.c: 19: read(0x00,0x09);
   391  079A  3000               	movlw	low(0)
   392  079B  00F2               	movwf	(?_read)
   393  079C  3000               	movlw	high(0)
   394  079D  00F3               	movwf	((?_read))+1
   395  079E  3009               	movlw	low(09h)
   396  079F  00F4               	movwf	0+(?_read)+02h
   397  07A0  3000               	movlw	high(09h)
   398  07A1  00F5               	movwf	(0+(?_read)+02h)+1
   399  07A2  120A  118A  26B4   	fcall	_read
              120A  118A         
   400                           	line	20
   401                           	
   402  07A7                     l1793:	
   403                           ;program.c: 20: write(0x00,0x0A,'C');
   404  07A7  3000               	movlw	low(0)
   405  07A8  00F2               	movwf	(?_write)
   406  07A9  3000               	movlw	high(0)
   407  07AA  00F3               	movwf	((?_write))+1
   408  07AB  300A               	movlw	low(0Ah)
   409  07AC  00F4               	movwf	0+(?_write)+02h
   410  07AD  3000               	movlw	high(0Ah)
   411  07AE  00F5               	movwf	(0+(?_write)+02h)+1
   412  07AF  3043               	movlw	low(043h)
   413  07B0  00F6               	movwf	0+(?_write)+04h
   414  07B1  3000               	movlw	high(043h)
   415  07B2  00F7               	movwf	(0+(?_write)+04h)+1
   416  07B3  120A  118A  26F3   	fcall	_write
              120A  118A         
   417                           	line	21
   418                           	
   419  07B8                     l1795:	
   420                           ;program.c: 21: _delay((unsigned long)((2000)*(10000000/4000.0)));
   421                           	opt asmopt_off
   422  07B8  301A               movlw  26
   423  07B9  00FD               movwf	((??_main+0)+0+2),f
   424  07BA  3045               movlw	69
   425  07BB  00FC               movwf	((??_main+0)+0+1),f
   426  07BC  307E               	movlw	126
   427  07BD  00FB               movwf	((??_main+0)+0),f
   428  07BE                     u2177:
   429  07BE  0BFB               	decfsz	((??_main+0)+0),f
   430  07BF  2FBE               	goto	u2177
   431  07C0  0BFC               	decfsz	((??_main+0)+0+1),f
   432  07C1  2FBE               	goto	u2177
   433  07C2  0BFD               	decfsz	((??_main+0)+0+2),f
   434  07C3  2FBE               	goto	u2177
   435                           opt asmopt_on
   436                           
   437                           	line	22
   438                           ;program.c: 22: read(0x00,0x0A);
   439  07C4  3000               	movlw	low(0)
   440  07C5  00F2               	movwf	(?_read)
   441  07C6  3000               	movlw	high(0)
   442  07C7  00F3               	movwf	((?_read))+1
   443  07C8  300A               	movlw	low(0Ah)
   444  07C9  00F4               	movwf	0+(?_read)+02h
   445  07CA  3000               	movlw	high(0Ah)
   446  07CB  00F5               	movwf	(0+(?_read)+02h)+1
   447  07CC  120A  118A  26B4   	fcall	_read
              120A  118A         
   448                           	line	23
   449                           ;program.c: 23: write(0x00,0x0B,'D');
   450  07D1  3000               	movlw	low(0)
   451  07D2  00F2               	movwf	(?_write)
   452  07D3  3000               	movlw	high(0)
   453  07D4  00F3               	movwf	((?_write))+1
   454  07D5  300B               	movlw	low(0Bh)
   455  07D6  00F4               	movwf	0+(?_write)+02h
   456  07D7  3000               	movlw	high(0Bh)
   457  07D8  00F5               	movwf	(0+(?_write)+02h)+1
   458  07D9  3044               	movlw	low(044h)
   459  07DA  00F6               	movwf	0+(?_write)+04h
   460  07DB  3000               	movlw	high(044h)
   461  07DC  00F7               	movwf	(0+(?_write)+04h)+1
   462  07DD  120A  118A  26F3   	fcall	_write
              120A  118A         
   463                           	line	24
   464                           	
   465  07E2                     l1797:	
   466                           ;program.c: 24: _delay((unsigned long)((2000)*(10000000/4000.0)));
   467                           	opt asmopt_off
   468  07E2  301A               movlw  26
   469  07E3  00FD               movwf	((??_main+0)+0+2),f
   470  07E4  3045               movlw	69
   471  07E5  00FC               movwf	((??_main+0)+0+1),f
   472  07E6  307E               	movlw	126
   473  07E7  00FB               movwf	((??_main+0)+0),f
   474  07E8                     u2187:
   475  07E8  0BFB               	decfsz	((??_main+0)+0),f
   476  07E9  2FE8               	goto	u2187
   477  07EA  0BFC               	decfsz	((??_main+0)+0+1),f
   478  07EB  2FE8               	goto	u2187
   479  07EC  0BFD               	decfsz	((??_main+0)+0+2),f
   480  07ED  2FE8               	goto	u2187
   481                           opt asmopt_on
   482                           
   483                           	line	25
   484                           	
   485  07EE                     l1799:	
   486                           ;program.c: 25: read(0x00,0x0B);
   487  07EE  3000               	movlw	low(0)
   488  07EF  00F2               	movwf	(?_read)
   489  07F0  3000               	movlw	high(0)
   490  07F1  00F3               	movwf	((?_read))+1
   491  07F2  300B               	movlw	low(0Bh)
   492  07F3  00F4               	movwf	0+(?_read)+02h
   493  07F4  3000               	movlw	high(0Bh)
   494  07F5  00F5               	movwf	(0+(?_read)+02h)+1
   495  07F6  120A  118A  26B4   	fcall	_read
              120A  118A         
   496  07FB  2FFC               	goto	l566
   497                           	line	26
   498                           ;program.c: 26: while(1){}}
   499                           	
   500  07FC                     l565:	
   501                           	
   502  07FC                     l566:	
   503  07FC  2FFC               	goto	l566
   504                           	
   505  07FD                     l567:	
   506                           	
   507  07FD                     l568:	
   508                           	global	start
   509  07FD  120A  118A  2800   	ljmp	start
   510                           	opt stack 0
   511                           GLOBAL	__end_of_main
   512  0800                     	__end_of_main:
   513 ;; =============== function _main ends ============
   514                           
   515                           	signat	_main,88
   516                           	global	_read
   517                           psect	text85,local,class=CODE,delta=2
   518                           global __ptext85
   519  06B4                     __ptext85:
   520                           
   521 ;; *************** function _read *****************
   522 ;; Defined at:
   523 ;;		line 46 in file "D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;  high            2    2[COMMON] int 
   526 ;;  low             2    4[COMMON] int 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;		None               void
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, pclath, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         4       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          3       0       0       0       0
   541 ;;      Totals:         7       0       0       0       0
   542 ;;Total ram usage:        7 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    1
   545 ;; This function calls:
   546 ;;		_SPI
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           psect	text85
   552                           	file	"D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   553                           	line	46
   554                           	global	__size_of_read
   555  003F                     	__size_of_read	equ	__end_of_read-_read
   556                           	
   557  06B4                     _read:	
   558                           	opt	stack 6
   559                           ; Regs used in _read: [wreg+status,2+status,0+pclath+cstack]
   560                           	line	47
   561                           	
   562  06B4                     l1759:	
   563                           ;program.c: 47: RC2=1;
   564  06B4  1283               	bcf	status, 5	;RP0=0, select bank0
   565  06B5  1303               	bcf	status, 6	;RP1=0, select bank0
   566  06B6  1507               	bsf	(58/8),(58)&7
   567                           	line	48
   568                           	
   569  06B7                     l1761:	
   570                           ;program.c: 48: _delay((unsigned long)((1000)*(10000000/4000.0)));
   571                           	opt asmopt_off
   572  06B7  300D               movlw  13
   573  06B8  00F8               movwf	((??_read+0)+0+2),f
   574  06B9  30A3               movlw	163
   575  06BA  00F7               movwf	((??_read+0)+0+1),f
   576  06BB  30BD               	movlw	189
   577  06BC  00F6               movwf	((??_read+0)+0),f
   578  06BD                     u2197:
   579  06BD  0BF6               	decfsz	((??_read+0)+0),f
   580  06BE  2EBD               	goto	u2197
   581  06BF  0BF7               	decfsz	((??_read+0)+0+1),f
   582  06C0  2EBD               	goto	u2197
   583  06C1  0BF8               	decfsz	((??_read+0)+0+2),f
   584  06C2  2EBD               	goto	u2197
   585  06C3  0064               	clrwdt
   586                           opt asmopt_on
   587                           
   588                           	line	49
   589                           	
   590  06C4                     l1763:	
   591                           ;program.c: 49: RC2=0;
   592  06C4  1283               	bcf	status, 5	;RP0=0, select bank0
   593  06C5  1303               	bcf	status, 6	;RP1=0, select bank0
   594  06C6  1107               	bcf	(58/8),(58)&7
   595                           	line	50
   596                           	
   597  06C7                     l1765:	
   598                           ;program.c: 50: SPI(0x03);
   599  06C7  3003               	movlw	low(03h)
   600  06C8  00F0               	movwf	(?_SPI)
   601  06C9  3000               	movlw	high(03h)
   602  06CA  00F1               	movwf	((?_SPI))+1
   603  06CB  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   604                           	line	51
   605                           	
   606  06D0                     l1767:	
   607                           ;program.c: 51: SPI(high);
   608  06D0  0873               	movf	(read@high+1),w
   609  06D1  01F1               	clrf	(?_SPI+1)
   610  06D2  07F1               	addwf	(?_SPI+1)
   611  06D3  0872               	movf	(read@high),w
   612  06D4  01F0               	clrf	(?_SPI)
   613  06D5  07F0               	addwf	(?_SPI)
   614                           
   615  06D6  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   616                           	line	52
   617                           	
   618  06DB                     l1769:	
   619                           ;program.c: 52: SPI(low);
   620  06DB  0875               	movf	(read@low+1),w
   621  06DC  01F1               	clrf	(?_SPI+1)
   622  06DD  07F1               	addwf	(?_SPI+1)
   623  06DE  0874               	movf	(read@low),w
   624  06DF  01F0               	clrf	(?_SPI)
   625  06E0  07F0               	addwf	(?_SPI)
   626                           
   627  06E1  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   628                           	line	53
   629                           	
   630  06E6                     l1771:	
   631                           ;program.c: 53: SPI(0x00);
   632  06E6  3000               	movlw	low(0)
   633  06E7  00F0               	movwf	(?_SPI)
   634  06E8  3000               	movlw	high(0)
   635  06E9  00F1               	movwf	((?_SPI))+1
   636  06EA  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   637                           	line	54
   638                           	
   639  06EF                     l1773:	
   640                           ;program.c: 54: RC2=1;}
   641  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
   642  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
   643  06F1  1507               	bsf	(58/8),(58)&7
   644                           	
   645  06F2                     l580:	
   646  06F2  0008               	return
   647                           	opt stack 0
   648                           GLOBAL	__end_of_read
   649  06F3                     	__end_of_read:
   650 ;; =============== function _read ends ============
   651                           
   652                           	signat	_read,8312
   653                           	global	_write
   654                           psect	text86,local,class=CODE,delta=2
   655                           global __ptext86
   656  06F3                     __ptext86:
   657                           
   658 ;; *************** function _write *****************
   659 ;; Defined at:
   660 ;;		line 33 in file "D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  high            2    2[COMMON] int 
   663 ;;  low             2    4[COMMON] int 
   664 ;;  data            2    6[COMMON] int 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;		None               void
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         6       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          3       0       0       0       0
   679 ;;      Totals:         9       0       0       0       0
   680 ;;Total ram usage:        9 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    1
   683 ;; This function calls:
   684 ;;		_SPI
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           psect	text86
   690                           	file	"D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   691                           	line	33
   692                           	global	__size_of_write
   693  004E                     	__size_of_write	equ	__end_of_write-_write
   694                           	
   695  06F3                     _write:	
   696                           	opt	stack 6
   697                           ; Regs used in _write: [wreg+status,2+status,0+pclath+cstack]
   698                           	line	34
   699                           	
   700  06F3                     l1737:	
   701                           ;program.c: 34: RC2=1;
   702  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
   703  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
   704  06F5  1507               	bsf	(58/8),(58)&7
   705                           	line	35
   706                           	
   707  06F6                     l1739:	
   708                           ;program.c: 35: _delay((unsigned long)((1000)*(10000000/4000.0)));
   709                           	opt asmopt_off
   710  06F6  300D               movlw  13
   711  06F7  00FA               movwf	((??_write+0)+0+2),f
   712  06F8  30A3               movlw	163
   713  06F9  00F9               movwf	((??_write+0)+0+1),f
   714  06FA  30BD               	movlw	189
   715  06FB  00F8               movwf	((??_write+0)+0),f
   716  06FC                     u2207:
   717  06FC  0BF8               	decfsz	((??_write+0)+0),f
   718  06FD  2EFC               	goto	u2207
   719  06FE  0BF9               	decfsz	((??_write+0)+0+1),f
   720  06FF  2EFC               	goto	u2207
   721  0700  0BFA               	decfsz	((??_write+0)+0+2),f
   722  0701  2EFC               	goto	u2207
   723  0702  0064               	clrwdt
   724                           opt asmopt_on
   725                           
   726                           	line	36
   727                           	
   728  0703                     l1741:	
   729                           ;program.c: 36: RC2=0;
   730  0703  1283               	bcf	status, 5	;RP0=0, select bank0
   731  0704  1303               	bcf	status, 6	;RP1=0, select bank0
   732  0705  1107               	bcf	(58/8),(58)&7
   733                           	line	37
   734                           	
   735  0706                     l1743:	
   736                           ;program.c: 37: SPI(0x06);
   737  0706  3006               	movlw	low(06h)
   738  0707  00F0               	movwf	(?_SPI)
   739  0708  3000               	movlw	high(06h)
   740  0709  00F1               	movwf	((?_SPI))+1
   741  070A  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   742                           	line	38
   743                           	
   744  070F                     l1745:	
   745                           ;program.c: 38: RC2=1;
   746  070F  1283               	bcf	status, 5	;RP0=0, select bank0
   747  0710  1303               	bcf	status, 6	;RP1=0, select bank0
   748  0711  1507               	bsf	(58/8),(58)&7
   749                           	line	39
   750                           	
   751  0712                     l1747:	
   752                           ;program.c: 39: RC2=0;
   753  0712  1107               	bcf	(58/8),(58)&7
   754                           	line	40
   755                           	
   756  0713                     l1749:	
   757                           ;program.c: 40: SPI(0x02);
   758  0713  3002               	movlw	low(02h)
   759  0714  00F0               	movwf	(?_SPI)
   760  0715  3000               	movlw	high(02h)
   761  0716  00F1               	movwf	((?_SPI))+1
   762  0717  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   763                           	line	41
   764                           	
   765  071C                     l1751:	
   766                           ;program.c: 41: SPI(high);
   767  071C  0873               	movf	(write@high+1),w
   768  071D  01F1               	clrf	(?_SPI+1)
   769  071E  07F1               	addwf	(?_SPI+1)
   770  071F  0872               	movf	(write@high),w
   771  0720  01F0               	clrf	(?_SPI)
   772  0721  07F0               	addwf	(?_SPI)
   773                           
   774  0722  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   775                           	line	42
   776                           	
   777  0727                     l1753:	
   778                           ;program.c: 42: SPI(low);
   779  0727  0875               	movf	(write@low+1),w
   780  0728  01F1               	clrf	(?_SPI+1)
   781  0729  07F1               	addwf	(?_SPI+1)
   782  072A  0874               	movf	(write@low),w
   783  072B  01F0               	clrf	(?_SPI)
   784  072C  07F0               	addwf	(?_SPI)
   785                           
   786  072D  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   787                           	line	43
   788                           	
   789  0732                     l1755:	
   790                           ;program.c: 43: SPI(data);
   791  0732  0877               	movf	(write@data+1),w
   792  0733  01F1               	clrf	(?_SPI+1)
   793  0734  07F1               	addwf	(?_SPI+1)
   794  0735  0876               	movf	(write@data),w
   795  0736  01F0               	clrf	(?_SPI)
   796  0737  07F0               	addwf	(?_SPI)
   797                           
   798  0738  120A  118A  26A9   	fcall	_SPI
              120A  118A         
   799                           	line	44
   800                           	
   801  073D                     l1757:	
   802                           ;program.c: 44: RC2=1;}
   803  073D  1283               	bcf	status, 5	;RP0=0, select bank0
   804  073E  1303               	bcf	status, 6	;RP1=0, select bank0
   805  073F  1507               	bsf	(58/8),(58)&7
   806                           	
   807  0740                     l577:	
   808  0740  0008               	return
   809                           	opt stack 0
   810                           GLOBAL	__end_of_write
   811  0741                     	__end_of_write:
   812 ;; =============== function _write ends ============
   813                           
   814                           	signat	_write,12408
   815                           	global	_SPI
   816                           psect	text87,local,class=CODE,delta=2
   817                           global __ptext87
   818  06A9                     __ptext87:
   819                           
   820 ;; *************** function _SPI *****************
   821 ;; Defined at:
   822 ;;		line 28 in file "D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  data            2    0[COMMON] int 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;		None               void
   829 ;; Registers used:
   830 ;;		wreg
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         2       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         2       0       0       0       0
   840 ;;Total ram usage:        2 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_write
   846 ;;		_read
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           psect	text87
   850                           	file	"D:\PIC16F877A Concepts\SPI EEPROM write&read\program.c"
   851                           	line	28
   852                           	global	__size_of_SPI
   853  000B                     	__size_of_SPI	equ	__end_of_SPI-_SPI
   854                           	
   855  06A9                     _SPI:	
   856                           	opt	stack 6
   857                           ; Regs used in _SPI: [wreg]
   858                           	line	29
   859                           	
   860  06A9                     l949:	
   861                           ;program.c: 29: SSPBUF=data;
   862  06A9  0870               	movf	(SPI@data),w
   863  06AA  1283               	bcf	status, 5	;RP0=0, select bank0
   864  06AB  1303               	bcf	status, 6	;RP1=0, select bank0
   865  06AC  0093               	movwf	(19)	;volatile
   866                           	line	30
   867                           ;program.c: 30: while(SSPIF==0);
   868  06AD  2EAE               	goto	l571
   869                           	
   870  06AE                     l572:	
   871                           	
   872  06AE                     l571:	
   873  06AE  1D8C               	btfss	(99/8),(99)&7
   874  06AF  2EB1               	goto	u11
   875  06B0  2EB2               	goto	u10
   876  06B1                     u11:
   877  06B1  2EAE               	goto	l571
   878  06B2                     u10:
   879                           	
   880  06B2                     l573:	
   881                           	line	31
   882                           ;program.c: 31: SSPIF=0;}
   883  06B2  118C               	bcf	(99/8),(99)&7
   884                           	
   885  06B3                     l574:	
   886  06B3  0008               	return
   887                           	opt stack 0
   888                           GLOBAL	__end_of_SPI
   889  06B4                     	__end_of_SPI:
   890 ;; =============== function _SPI ends ============
   891                           
   892                           	signat	_SPI,4216
   893                           psect	text88,local,class=CODE,delta=2
   894                           global __ptext88
   895  0000                     __ptext88:
   896                           	global	btemp
   897  007E                     	btemp set 07Eh
   898                           
   899                           	DABS	1,126,2	;btemp
   900                           	global	wtemp0
   901  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Fri Apr 25 15:14:18 2025

                  u10 06B2                    u11 06B1                   l571 06AE                   l572 06AE  
                 l580 06F2                   l573 06B2                   l565 07FC                   l574 06B3  
                 l566 07FC                   l567 07FD                   l568 07FD                   l577 0740  
                 l949 06A9                   _RC2 003A                   _SPI 06A9                  ?_SPI 0070  
                l1741 0703                  l1751 071C                  l1743 0706                  l1753 0727  
                l1745 070F                  l1737 06F3                  l1761 06B7                  l1755 0732  
                l1747 0712                  l1739 06F6                  l1771 06E6                  l1763 06C4  
                l1757 073D                  l1749 0713                  l1773 06EF                  l1765 06C7  
                l1781 074B                  l1767 06D0                  l1759 06B4                  l1791 079A  
                l1783 074E                  l1775 0741                  l1769 06DB                  l1793 07A7  
                l1785 0753                  l1777 0744                  l1795 07B8                  l1787 0764  
                l1779 0748                  l1797 07E2                  l1789 078E                  l1799 07EE  
                u2207 06FC                  u2157 076A                  u2167 0794                  u2177 07BE  
                u2187 07E8                  u2197 06BD                  _main 0741                  _read 06B4  
                btemp 007E                  start 0000                 ??_SPI 0072                 ?_main 0070  
               ?_read 0072                 _PORTB 0006                 _PORTC 0007                 _TRISB 0086  
               _TRISC 0087                 _SSPIF 0063                 _write 06F3                 status 0003  
               wtemp0 007E          __end_of_main 0800          __end_of_read 06F3                ??_main 007B  
              ??_read 0076                ?_write 0072                _SSPCON 0014                _SSPBUF 0013  
      __pcstackCOMMON 0070         __end_of_write 0741               ??_write 0078            __pmaintext 0741  
             SPI@data 0070               _SSPSTAT 0094          __size_of_SPI 000B  end_of_initialization 06A5  
             read@low 0074   start_initialization 06A5           __end_of_SPI 06B4        __size_of_write 004E  
            __ptext84 0000              __ptext85 06B4              __ptext86 06F3              __ptext87 06A9  
            __ptext88 0000         __size_of_main 00BF         __size_of_read 003F              read@high 0072  
           write@data 0076             write@high 0072              write@low 0074  
