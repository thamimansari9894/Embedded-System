

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Thu Feb 27 11:20:11 2025

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_EEPROM_read
    43                           	FNCALL	_main,_EEPROM_write
    44                           	FNROOT	_main
    45                           	FNCALL	intlevel1,_isr
    46                           	global	intlevel1
    47                           	FNROOT	intlevel1
    48                           	global	main@F521
    49                           psect	idataBANK0,class=CODE,space=0,delta=2
    50                           global __pidataBANK0
    51  014C                     __pidataBANK0:
    52                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
    53                           	line	21
    54                           
    55                           ;initializer for main@F521
    56  014C  3408               	retlw	08h
    57  014D  340C               	retlw	0Ch
    58  014E  3404               	retlw	04h
    59  014F  3406               	retlw	06h
    60  0150  3402               	retlw	02h
    61  0151  3403               	retlw	03h
    62  0152  3401               	retlw	01h
    63  0153  3409               	retlw	09h
    64  0154  3400               	retlw	0
    65  0155  3400               	retlw	0
    66                           	global	_INTCON
    67  000B                     _INTCON	set	11
    68                           	global	_PORTB
    69  0006                     _PORTB	set	6
    70                           	global	_PORTC
    71  0007                     _PORTC	set	7
    72                           	global	_PORTD
    73  0008                     _PORTD	set	8
    74                           	global	_INTF
    75  0059                     _INTF	set	89
    76                           	global	_RD0
    77  0040                     _RD0	set	64
    78                           	global	_TRISB
    79  0086                     _TRISB	set	134
    80                           	global	_TRISC
    81  0087                     _TRISC	set	135
    82                           	global	_TRISD
    83  0088                     _TRISD	set	136
    84                           	global	_EEADR
    85  010D                     _EEADR	set	269
    86                           	global	_EEDATA
    87  010C                     _EEDATA	set	268
    88                           	global	_EECON2
    89  018D                     _EECON2	set	397
    90                           	global	_EEPGD
    91  0C67                     _EEPGD	set	3175
    92                           	global	_RD
    93  0C60                     _RD	set	3168
    94                           	global	_WR
    95  0C61                     _WR	set	3169
    96                           	global	_WREN
    97  0C62                     _WREN	set	3170
    98                           	file	"program.as"
    99                           	line	#
   100                           psect cinit,class=CODE,delta=2
   101                           global start_initialization
   102  0129                     start_initialization:
   103                           
   104                           psect	dataBANK0,class=BANK0,space=1
   105                           global __pdataBANK0
   106  0034                     __pdataBANK0:
   107                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   108  0034                     main@F521:
   109  0034                            ds      10
   110                           
   111                           global btemp
   112                           psect inittext,class=CODE,delta=2
   113                           global init_fetch,btemp
   114                           ;	Called with low address in FSR and high address in W
   115  013B                     init_fetch:
   116  013B  087E               	movf btemp,w
   117  013C  008A               	movwf pclath
   118  013D  087F               	movf btemp+1,w
   119  013E  0082               	movwf pc
   120                           global init_ram
   121                           ;Called with:
   122                           ;	high address of idata address in btemp 
   123                           ;	low address of idata address in btemp+1 
   124                           ;	low address of data in FSR
   125                           ;	high address + 1 of data in btemp-1
   126  013F                     init_ram:
   127  013F  213B  120A  118A   	fcall init_fetch
   128  0142  0080               	movwf indf,f
   129  0143  0A84               	incf fsr,f
   130  0144  0804               	movf fsr,w
   131  0145  067D               	xorwf btemp-1,w
   132  0146  1903               	btfsc status,2
   133  0147  3400               	retlw 0
   134  0148  0AFF               	incf btemp+1,f
   135  0149  1903               	btfsc status,2
   136  014A  0AFE               	incf btemp,f
   137  014B  293F               	goto init_ram
   138                           ; Initialize objects allocated to BANK0
   139                           psect cinit,class=CODE,delta=2
   140                           global init_ram, __pidataBANK0
   141  0129  1383               	bcf	status, 7	;select IRP bank0
   142  012A  303E               	movlw low(__pdataBANK0+10)
   143  012B  00FD               	movwf btemp-1,f
   144  012C  3001               	movlw high(__pidataBANK0)
   145  012D  00FE               	movwf btemp,f
   146  012E  304C               	movlw low(__pidataBANK0)
   147  012F  00FF               	movwf btemp+1,f
   148  0130  3034               	movlw low(__pdataBANK0)
   149  0131  0084               	movwf fsr,f
   150  0132  120A  118A  213F   	fcall init_ram
              120A  118A         
   151                           psect cinit,class=CODE,delta=2
   152                           global end_of_initialization
   153                           
   154                           ;End of C runtime variable initialization code
   155                           
   156  0137                     end_of_initialization:
   157  0137  0183               clrf status
   158  0138  120A  118A  2815   ljmp _main	;jump to C main() function
   159                           psect	cstackCOMMON,class=COMMON,space=1
   160                           global __pcstackCOMMON
   161  0070                     __pcstackCOMMON:
   162                           	global	?_isr
   163  0070                     ?_isr:	; 0 bytes @ 0x0
   164                           	global	??_isr
   165  0070                     ??_isr:	; 0 bytes @ 0x0
   166                           	global	?_main
   167  0070                     ?_main:	; 0 bytes @ 0x0
   168  0070                     	ds	4
   169                           	global	?_EEPROM_write
   170  0074                     ?_EEPROM_write:	; 0 bytes @ 0x4
   171                           	global	?_EEPROM_read
   172  0074                     ?_EEPROM_read:	; 1 bytes @ 0x4
   173                           	global	EEPROM_write@address
   174  0074                     EEPROM_write@address:	; 2 bytes @ 0x4
   175                           	global	EEPROM_read@address
   176  0074                     EEPROM_read@address:	; 2 bytes @ 0x4
   177  0074                     	ds	2
   178                           	global	??_EEPROM_read
   179  0076                     ??_EEPROM_read:	; 0 bytes @ 0x6
   180                           	global	EEPROM_write@data
   181  0076                     EEPROM_write@data:	; 2 bytes @ 0x6
   182  0076                     	ds	2
   183                           	global	??_EEPROM_write
   184  0078                     ??_EEPROM_write:	; 0 bytes @ 0x8
   185  0078                     	ds	1
   186                           psect	cstackBANK0,class=BANK0,space=1
   187                           global __pcstackBANK0
   188  0020                     __pcstackBANK0:
   189                           	global	EEPROM_read@a
   190  0020                     EEPROM_read@a:	; 2 bytes @ 0x0
   191  0020                     	ds	2
   192                           	global	??_main
   193  0022                     ??_main:	; 0 bytes @ 0x2
   194  0022                     	ds	4
   195                           	global	main@a
   196  0026                     main@a:	; 10 bytes @ 0x6
   197  0026                     	ds	10
   198                           	global	main@stop
   199  0030                     main@stop:	; 2 bytes @ 0x10
   200  0030                     	ds	2
   201                           	global	main@i
   202  0032                     main@i:	; 2 bytes @ 0x12
   203  0032                     	ds	2
   204 ;;Data sizes: Strings 0, constant 0, data 10, bss 0, persistent 0 stack 0
   205 ;;Auto spaces:   Size  Autos    Used
   206 ;; COMMON          14      9       9
   207 ;; BANK0           80     20      30
   208 ;; BANK1           80      0       0
   209 ;; BANK3           96      0       0
   210 ;; BANK2           96      0       0
   211                           
   212 ;;
   213 ;; Pointer list with targets:
   214                           
   215                           
   216                           
   217 ;;
   218 ;; Critical Paths under _main in COMMON
   219 ;;
   220 ;;   _main->_EEPROM_read
   221 ;;
   222 ;; Critical Paths under _isr in COMMON
   223 ;;
   224 ;;   None.
   225 ;;
   226 ;; Critical Paths under _main in BANK0
   227 ;;
   228 ;;   _main->_EEPROM_read
   229 ;;
   230 ;; Critical Paths under _isr in BANK0
   231 ;;
   232 ;;   None.
   233 ;;
   234 ;; Critical Paths under _main in BANK1
   235 ;;
   236 ;;   None.
   237 ;;
   238 ;; Critical Paths under _isr in BANK1
   239 ;;
   240 ;;   None.
   241 ;;
   242 ;; Critical Paths under _main in BANK3
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _isr in BANK3
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _main in BANK2
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _isr in BANK2
   255 ;;
   256 ;;   None.
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   260 ;;
   261                           
   262 ;;
   263 ;;Call Graph Tables:
   264 ;;
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (0) _main                                                18    18      0     226
   269 ;;                                              2 BANK0     18    18      0
   270 ;;                        _EEPROM_read
   271 ;;                       _EEPROM_write
   272 ;; ---------------------------------------------------------------------------------
   273 ;; (1) _EEPROM_read                                          7     5      2      45
   274 ;;                                              4 COMMON     5     3      2
   275 ;;                                              0 BANK0      2     2      0
   276 ;; ---------------------------------------------------------------------------------
   277 ;; (1) _EEPROM_write                                         4     0      4      44
   278 ;;                                              4 COMMON     4     0      4
   279 ;; ---------------------------------------------------------------------------------
   280 ;; Estimated maximum stack depth 1
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (2) _isr                                                  4     4      0       0
   285 ;;                                              0 COMMON     4     4      0
   286 ;; ---------------------------------------------------------------------------------
   287 ;; Estimated maximum stack depth 2
   288 ;; ---------------------------------------------------------------------------------
   289                           
   290 ;; Call Graph Graphs:
   291                           
   292 ;; _main (ROOT)
   293 ;;   _EEPROM_read
   294 ;;   _EEPROM_write
   295 ;;
   296 ;; _isr (ROOT)
   297 ;;
   298                           
   299 ;; Address spaces:
   300                           
   301 ;;Name               Size   Autos  Total    Cost      Usage
   302 ;;BANK3               60      0       0       9        0.0%
   303 ;;BITBANK3            60      0       0       8        0.0%
   304 ;;SFR3                 0      0       0       4        0.0%
   305 ;;BITSFR3              0      0       0       4        0.0%
   306 ;;BANK2               60      0       0      11        0.0%
   307 ;;BITBANK2            60      0       0      10        0.0%
   308 ;;SFR2                 0      0       0       5        0.0%
   309 ;;BITSFR2              0      0       0       5        0.0%
   310 ;;SFR1                 0      0       0       2        0.0%
   311 ;;BITSFR1              0      0       0       2        0.0%
   312 ;;BANK1               50      0       0       7        0.0%
   313 ;;BITBANK1            50      0       0       6        0.0%
   314 ;;CODE                 0      0       0       0        0.0%
   315 ;;DATA                 0      0      28      12        0.0%
   316 ;;ABS                  0      0      27       3        0.0%
   317 ;;NULL                 0      0       0       0        0.0%
   318 ;;STACK                0      0       1       2        0.0%
   319 ;;BANK0               50     14      1E       5       37.5%
   320 ;;BITBANK0            50      0       0       4        0.0%
   321 ;;SFR0                 0      0       0       1        0.0%
   322 ;;BITSFR0              0      0       0       1        0.0%
   323 ;;COMMON               E      9       9       1       64.3%
   324 ;;BITCOMMON            E      0       0       0        0.0%
   325 ;;EEDATA             100      0       0       0        0.0%
   326                           
   327                           	global	_main
   328                           psect	maintext,global,class=CODE,delta=2
   329                           global __pmaintext
   330  0015                     __pmaintext:
   331                           
   332 ;; *************** function _main *****************
   333 ;; Defined at:
   334 ;;		line 11 in file "C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  a              10    6[BANK0 ] unsigned char [10]
   339 ;;  i               2   18[BANK0 ] int 
   340 ;;  stop            2   16[BANK0 ] int 
   341 ;; Return value:  Size  Location     Type
   342 ;;		None               void
   343 ;; Registers used:
   344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 17F/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0      14       0       0       0
   352 ;;      Temps:          0       4       0       0       0
   353 ;;      Totals:         0      18       0       0       0
   354 ;;Total ram usage:       18 bytes
   355 ;; Hardware stack levels required when called:    2
   356 ;; This function calls:
   357 ;;		_EEPROM_read
   358 ;;		_EEPROM_write
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           psect	maintext
   364                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   365                           	line	11
   366                           	global	__size_of_main
   367  00C8                     	__size_of_main	equ	__end_of_main-_main
   368                           	
   369  0015                     _main:	
   370                           	opt	stack 6
   371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   372                           	line	12
   373                           	
   374  0015                     l1815:	
   375                           ;Program.c: 12: TRISC=0x00;
   376  0015  1683               	bsf	status, 5	;RP0=1, select bank1
   377  0016  1303               	bcf	status, 6	;RP1=0, select bank1
   378  0017  0187               	clrf	(135)^080h	;volatile
   379                           	line	13
   380                           ;Program.c: 13: PORTC=0x00;
   381  0018  1283               	bcf	status, 5	;RP0=0, select bank0
   382  0019  1303               	bcf	status, 6	;RP1=0, select bank0
   383  001A  0187               	clrf	(7)	;volatile
   384                           	line	14
   385                           ;Program.c: 14: TRISD=0x00;
   386  001B  1683               	bsf	status, 5	;RP0=1, select bank1
   387  001C  1303               	bcf	status, 6	;RP1=0, select bank1
   388  001D  0188               	clrf	(136)^080h	;volatile
   389                           	line	15
   390                           ;Program.c: 15: PORTD=0x00;
   391  001E  1283               	bcf	status, 5	;RP0=0, select bank0
   392  001F  1303               	bcf	status, 6	;RP1=0, select bank0
   393  0020  0188               	clrf	(8)	;volatile
   394                           	line	16
   395                           ;Program.c: 16: PORTB=0x00;
   396  0021  0186               	clrf	(6)	;volatile
   397                           	line	17
   398                           	
   399  0022                     l1817:	
   400                           ;Program.c: 17: TRISB=1;
   401  0022  3001               	movlw	(01h)
   402  0023  1683               	bsf	status, 5	;RP0=1, select bank1
   403  0024  1303               	bcf	status, 6	;RP1=0, select bank1
   404  0025  0086               	movwf	(134)^080h	;volatile
   405                           	line	18
   406                           	
   407  0026                     l1819:	
   408                           ;Program.c: 18: INTCON=0x90;
   409  0026  3090               	movlw	(090h)
   410  0027  008B               	movwf	(11)	;volatile
   411                           	line	21
   412                           	
   413  0028                     l1821:	
   414                           ;Program.c: 20: int stop,i;
   415                           ;Program.c: 21: char a[10]={0x08,0x0C,0x04,0x06,0x02,0x03,0x01,0x09};
   416  0028  3026               	movlw	(main@a)&0ffh
   417  0029  0084               	movwf	fsr0
   418  002A  3034               	movlw	low(main@F521)
   419  002B  1283               	bcf	status, 5	;RP0=0, select bank0
   420  002C  1303               	bcf	status, 6	;RP1=0, select bank0
   421  002D  00A2               	movwf	(??_main+0)+0
   422  002E  0804               	movf	fsr0,w
   423  002F  00A3               	movwf	((??_main+0)+0+1)
   424  0030  300A               	movlw	10
   425  0031  00A4               	movwf	((??_main+0)+0+2)
   426  0032                     u2210:
   427  0032  0822               	movf	(??_main+0)+0,w
   428  0033  0084               	movwf	fsr0
   429  0034  1383               	bcf	status, 7	;select IRP bank0
   430                           	
   431  0035  0800               	movf	indf,w
   432  0036  00A5               	movwf	((??_main+0)+0+3)
   433  0037  0AA2               	incf	(??_main+0)+0,f
   434  0038  0823               	movf	((??_main+0)+0+1),w
   435  0039  0084               	movwf	fsr0
   436                           	
   437  003A  0825               	movf	((??_main+0)+0+3),w
   438  003B  0080               	movwf	indf
   439  003C  0AA3               	incf	((??_main+0)+0+1),f
   440  003D  0BA4               	decfsz	((??_main+0)+0+2),f
   441  003E  2832               	goto	u2210
   442                           	line	22
   443                           	
   444  003F                     l1823:	
   445                           ;Program.c: 22: if((EEPROM_read(0x00)>=0)&&(EEPROM_read(0x00)<=8)){
   446  003F  3000               	movlw	low(0)
   447  0040  00F4               	movwf	(?_EEPROM_read)
   448  0041  3000               	movlw	high(0)
   449  0042  00F5               	movwf	((?_EEPROM_read))+1
   450  0043  120A  118A  20DD   	fcall	_EEPROM_read
              120A  118A         
   451                           	
   452  0048                     l1825:	
   453  0048  3000               	movlw	low(0)
   454  0049  00F4               	movwf	(?_EEPROM_read)
   455  004A  3000               	movlw	high(0)
   456  004B  00F5               	movwf	((?_EEPROM_read))+1
   457  004C  120A  118A  20DD   	fcall	_EEPROM_read
              120A  118A         
   458  0051  1283               	bcf	status, 5	;RP0=0, select bank0
   459  0052  1303               	bcf	status, 6	;RP1=0, select bank0
   460  0053  00A2               	movwf	(??_main+0)+0
   461  0054  3009               	movlw	(09h)
   462  0055  0222               	subwf	0+(??_main+0)+0,w
   463  0056  1803               	skipnc
   464  0057  2859               	goto	u2221
   465  0058  285A               	goto	u2220
   466  0059                     u2221:
   467  0059  286B               	goto	l571
   468  005A                     u2220:
   469                           	line	23
   470                           	
   471  005A                     l1827:	
   472                           ;Program.c: 23: stop=EEPROM_read(0x00);}
   473  005A  3000               	movlw	low(0)
   474  005B  00F4               	movwf	(?_EEPROM_read)
   475  005C  3000               	movlw	high(0)
   476  005D  00F5               	movwf	((?_EEPROM_read))+1
   477  005E  120A  118A  20DD   	fcall	_EEPROM_read
              120A  118A         
   478  0063  1283               	bcf	status, 5	;RP0=0, select bank0
   479  0064  1303               	bcf	status, 6	;RP1=0, select bank0
   480  0065  00A2               	movwf	(??_main+0)+0
   481  0066  01A3               	clrf	(??_main+0)+0+1
   482  0067  0822               	movf	0+(??_main+0)+0,w
   483  0068  00B0               	movwf	(main@stop)
   484  0069  0823               	movf	1+(??_main+0)+0,w
   485  006A  00B1               	movwf	(main@stop+1)
   486                           	
   487  006B                     l571:	
   488                           	line	24
   489                           ;Program.c: 24: if((EEPROM_read(0x00)==0xFF)){}
   490  006B  3000               	movlw	low(0)
   491  006C  00F4               	movwf	(?_EEPROM_read)
   492  006D  3000               	movlw	high(0)
   493  006E  00F5               	movwf	((?_EEPROM_read))+1
   494  006F  120A  118A  20DD   	fcall	_EEPROM_read
              120A  118A         
   495  0074  2876               	goto	l1829
   496                           	
   497  0075                     l572:	
   498  0075  2876               	goto	l1829
   499                           	line	26
   500                           ;Program.c: 26: while (1){
   501                           	
   502  0076                     l573:	
   503                           	line	27
   504                           	
   505  0076                     l1829:	
   506                           ;Program.c: 27: for(i=stop;i<=8;i++){
   507  0076  1283               	bcf	status, 5	;RP0=0, select bank0
   508  0077  1303               	bcf	status, 6	;RP1=0, select bank0
   509  0078  0831               	movf	(main@stop+1),w
   510  0079  01B3               	clrf	(main@i+1)
   511  007A  07B3               	addwf	(main@i+1)
   512  007B  0830               	movf	(main@stop),w
   513  007C  01B2               	clrf	(main@i)
   514  007D  07B2               	addwf	(main@i)
   515                           
   516                           	
   517  007E                     l1831:	
   518  007E  0833               	movf	(main@i+1),w
   519  007F  3A80               	xorlw	80h
   520  0080  00FF               	movwf	btemp+1
   521  0081  3080               	movlw	(high(09h))^80h
   522  0082  027F               	subwf	btemp+1,w
   523  0083  1D03               	skipz
   524  0084  2887               	goto	u2235
   525  0085  3009               	movlw	low(09h)
   526  0086  0232               	subwf	(main@i),w
   527  0087                     u2235:
   528                           
   529  0087  1C03               	skipc
   530  0088  288A               	goto	u2231
   531  0089  288B               	goto	u2230
   532  008A                     u2231:
   533  008A  288D               	goto	l1835
   534  008B                     u2230:
   535  008B  28C9               	goto	l1845
   536                           	
   537  008C                     l1833:	
   538  008C  28C9               	goto	l1845
   539                           	
   540  008D                     l574:	
   541                           	line	28
   542                           	
   543  008D                     l1835:	
   544                           ;Program.c: 28: PORTC=a[i];
   545  008D  1283               	bcf	status, 5	;RP0=0, select bank0
   546  008E  1303               	bcf	status, 6	;RP1=0, select bank0
   547  008F  0832               	movf	(main@i),w
   548  0090  3E26               	addlw	main@a&0ffh
   549  0091  0084               	movwf	fsr0
   550  0092  1383               	bcf	status, 7	;select IRP bank0
   551  0093  0800               	movf	indf,w
   552  0094  0087               	movwf	(7)	;volatile
   553                           	line	29
   554                           	
   555  0095                     l1837:	
   556                           ;Program.c: 29: EEPROM_write(0x00,i);
   557  0095  3000               	movlw	low(0)
   558  0096  00F4               	movwf	(?_EEPROM_write)
   559  0097  3000               	movlw	high(0)
   560  0098  00F5               	movwf	((?_EEPROM_write))+1
   561  0099  0833               	movf	(main@i+1),w
   562  009A  01F7               	clrf	1+(?_EEPROM_write)+02h
   563  009B  07F7               	addwf	1+(?_EEPROM_write)+02h
   564  009C  0832               	movf	(main@i),w
   565  009D  01F6               	clrf	0+(?_EEPROM_write)+02h
   566  009E  07F6               	addwf	0+(?_EEPROM_write)+02h
   567                           
   568  009F  120A  118A  2100   	fcall	_EEPROM_write
              120A  118A         
   569                           	line	30
   570                           	
   571  00A4                     l1839:	
   572                           ;Program.c: 30: _delay((unsigned long)((50)*(20000000/4000.0)));}
   573                           	opt asmopt_off
   574  00A4  3002               movlw  2
   575  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
   576  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
   577  00A7  00A4               movwf	((??_main+0)+0+2),f
   578  00A8  3044               movlw	68
   579  00A9  00A3               movwf	((??_main+0)+0+1),f
   580  00AA  30A9               	movlw	169
   581  00AB  00A2               movwf	((??_main+0)+0),f
   582  00AC                     u2257:
   583  00AC  0BA2               	decfsz	((??_main+0)+0),f
   584  00AD  28AC               	goto	u2257
   585  00AE  0BA3               	decfsz	((??_main+0)+0+1),f
   586  00AF  28AC               	goto	u2257
   587  00B0  0BA4               	decfsz	((??_main+0)+0+2),f
   588  00B1  28AC               	goto	u2257
   589  00B2  0064               	clrwdt
   590                           opt asmopt_on
   591                           
   592                           	line	27
   593                           	
   594  00B3                     l1841:	
   595  00B3  3001               	movlw	low(01h)
   596  00B4  1283               	bcf	status, 5	;RP0=0, select bank0
   597  00B5  1303               	bcf	status, 6	;RP1=0, select bank0
   598  00B6  07B2               	addwf	(main@i),f
   599  00B7  1803               	skipnc
   600  00B8  0AB3               	incf	(main@i+1),f
   601  00B9  3000               	movlw	high(01h)
   602  00BA  07B3               	addwf	(main@i+1),f
   603                           	
   604  00BB                     l1843:	
   605  00BB  0833               	movf	(main@i+1),w
   606  00BC  3A80               	xorlw	80h
   607  00BD  00FF               	movwf	btemp+1
   608  00BE  3080               	movlw	(high(09h))^80h
   609  00BF  027F               	subwf	btemp+1,w
   610  00C0  1D03               	skipz
   611  00C1  28C4               	goto	u2245
   612  00C2  3009               	movlw	low(09h)
   613  00C3  0232               	subwf	(main@i),w
   614  00C4                     u2245:
   615                           
   616  00C4  1C03               	skipc
   617  00C5  28C7               	goto	u2241
   618  00C6  28C8               	goto	u2240
   619  00C7                     u2241:
   620  00C7  288D               	goto	l1835
   621  00C8                     u2240:
   622  00C8  28C9               	goto	l1845
   623                           	
   624  00C9                     l575:	
   625                           	line	31
   626                           	
   627  00C9                     l1845:	
   628                           ;Program.c: 31: EEPROM_write(0x00,0xFF);
   629  00C9  3000               	movlw	low(0)
   630  00CA  00F4               	movwf	(?_EEPROM_write)
   631  00CB  3000               	movlw	high(0)
   632  00CC  00F5               	movwf	((?_EEPROM_write))+1
   633  00CD  30FF               	movlw	low(0FFh)
   634  00CE  00F6               	movwf	0+(?_EEPROM_write)+02h
   635  00CF  3000               	movlw	high(0FFh)
   636  00D0  00F7               	movwf	(0+(?_EEPROM_write)+02h)+1
   637  00D1  120A  118A  2100   	fcall	_EEPROM_write
              120A  118A         
   638  00D6  28D7               	goto	l577
   639                           	line	32
   640                           ;Program.c: 32: while(1){}}}
   641                           	
   642  00D7                     l576:	
   643                           	
   644  00D7                     l577:	
   645  00D7  28D7               	goto	l577
   646                           	
   647  00D8                     l578:	
   648  00D8  2876               	goto	l1829
   649                           	
   650  00D9                     l579:	
   651                           	line	26
   652  00D9  2876               	goto	l1829
   653                           	
   654  00DA                     l580:	
   655                           	line	32
   656                           	
   657  00DA                     l581:	
   658                           	global	start
   659  00DA  120A  118A  2812   	ljmp	start
   660                           	opt stack 0
   661                           GLOBAL	__end_of_main
   662  00DD                     	__end_of_main:
   663 ;; =============== function _main ends ============
   664                           
   665                           	signat	_main,88
   666                           	global	_EEPROM_read
   667                           psect	text120,local,class=CODE,delta=2
   668                           global __ptext120
   669  00DD                     __ptext120:
   670                           
   671 ;; *************** function _EEPROM_read *****************
   672 ;; Defined at:
   673 ;;		line 45 in file "C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  address         2    4[COMMON] int 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  a               2    0[BANK0 ] int 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      unsigned char 
   680 ;; Registers used:
   681 ;;		wreg
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         2       0       0       0       0
   688 ;;      Locals:         0       2       0       0       0
   689 ;;      Temps:          3       0       0       0       0
   690 ;;      Totals:         5       2       0       0       0
   691 ;;Total ram usage:        7 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           psect	text120
   701                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   702                           	line	45
   703                           	global	__size_of_EEPROM_read
   704  0023                     	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
   705                           	
   706  00DD                     _EEPROM_read:	
   707                           	opt	stack 6
   708                           ; Regs used in _EEPROM_read: [wreg]
   709                           	line	47
   710                           	
   711  00DD                     l1807:	
   712                           ;Program.c: 46: int a;
   713                           ;Program.c: 47: EEADR=address;
   714  00DD  0874               	movf	(EEPROM_read@address),w
   715  00DE  1283               	bcf	status, 5	;RP0=0, select bank2
   716  00DF  1703               	bsf	status, 6	;RP1=1, select bank2
   717  00E0  008D               	movwf	(269)^0100h	;volatile
   718                           	line	48
   719                           ;Program.c: 48: a=EEDATA;
   720  00E1  080C               	movf	(268)^0100h,w	;volatile
   721  00E2  00F6               	movwf	(??_EEPROM_read+0)+0
   722  00E3  01F7               	clrf	(??_EEPROM_read+0)+0+1
   723  00E4  0876               	movf	0+(??_EEPROM_read+0)+0,w
   724  00E5  1283               	bcf	status, 5	;RP0=0, select bank0
   725  00E6  1303               	bcf	status, 6	;RP1=0, select bank0
   726  00E7  00A0               	movwf	(EEPROM_read@a)
   727  00E8  0877               	movf	1+(??_EEPROM_read+0)+0,w
   728  00E9  00A1               	movwf	(EEPROM_read@a+1)
   729                           	line	49
   730                           	
   731  00EA                     l1809:	
   732                           ;Program.c: 49: EEPGD=0;
   733  00EA  1683               	bsf	status, 5	;RP0=1, select bank3
   734  00EB  1703               	bsf	status, 6	;RP1=1, select bank3
   735  00EC  138C               	bcf	(3175/8)^0180h,(3175)&7
   736                           	line	50
   737                           	
   738  00ED                     l1811:	
   739                           ;Program.c: 50: RD=1;
   740  00ED  140C               	bsf	(3168/8)^0180h,(3168)&7
   741                           	line	51
   742                           ;Program.c: 51: _delay((unsigned long)((50)*(20000000/4000.0)));
   743                           	opt asmopt_off
   744  00EE  3002               movlw  2
   745  00EF  00F8               movwf	((??_EEPROM_read+0)+0+2),f
   746  00F0  3044               movlw	68
   747  00F1  00F7               movwf	((??_EEPROM_read+0)+0+1),f
   748  00F2  30A9               	movlw	169
   749  00F3  00F6               movwf	((??_EEPROM_read+0)+0),f
   750  00F4                     u2267:
   751  00F4  0BF6               	decfsz	((??_EEPROM_read+0)+0),f
   752  00F5  28F4               	goto	u2267
   753  00F6  0BF7               	decfsz	((??_EEPROM_read+0)+0+1),f
   754  00F7  28F4               	goto	u2267
   755  00F8  0BF8               	decfsz	((??_EEPROM_read+0)+0+2),f
   756  00F9  28F4               	goto	u2267
   757  00FA  0064               	clrwdt
   758                           opt asmopt_on
   759                           
   760                           	line	52
   761                           ;Program.c: 52: return a;}
   762  00FB  1283               	bcf	status, 5	;RP0=0, select bank0
   763  00FC  1303               	bcf	status, 6	;RP1=0, select bank0
   764  00FD  0820               	movf	(EEPROM_read@a),w
   765  00FE  28FF               	goto	l590
   766                           	
   767  00FF                     l1813:	
   768                           	
   769  00FF                     l590:	
   770  00FF  0008               	return
   771                           	opt stack 0
   772                           GLOBAL	__end_of_EEPROM_read
   773  0100                     	__end_of_EEPROM_read:
   774 ;; =============== function _EEPROM_read ends ============
   775                           
   776                           	signat	_EEPROM_read,4217
   777                           	global	_EEPROM_write
   778                           psect	text121,local,class=CODE,delta=2
   779                           global __ptext121
   780  0100                     __ptext121:
   781                           
   782 ;; *************** function _EEPROM_write *****************
   783 ;; Defined at:
   784 ;;		line 34 in file "C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  address         2    4[COMMON] int 
   787 ;;  data            2    6[COMMON] int 
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;		None               void
   792 ;; Registers used:
   793 ;;		wreg
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         4       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         4       0       0       0       0
   803 ;;Total ram usage:        4 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    1
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           psect	text121
   813                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   814                           	line	34
   815                           	global	__size_of_EEPROM_write
   816  0016                     	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
   817                           	
   818  0100                     _EEPROM_write:	
   819                           	opt	stack 6
   820                           ; Regs used in _EEPROM_write: [wreg]
   821                           	line	35
   822                           	
   823  0100                     l1799:	
   824                           ;Program.c: 35: EEADR=address;
   825  0100  0874               	movf	(EEPROM_write@address),w
   826  0101  1283               	bcf	status, 5	;RP0=0, select bank2
   827  0102  1703               	bsf	status, 6	;RP1=1, select bank2
   828  0103  008D               	movwf	(269)^0100h	;volatile
   829                           	line	36
   830                           ;Program.c: 36: EEDATA=data;
   831  0104  0876               	movf	(EEPROM_write@data),w
   832  0105  008C               	movwf	(268)^0100h	;volatile
   833                           	line	37
   834                           	
   835  0106                     l1801:	
   836                           ;Program.c: 37: EEPGD=0;
   837  0106  1683               	bsf	status, 5	;RP0=1, select bank3
   838  0107  1703               	bsf	status, 6	;RP1=1, select bank3
   839  0108  138C               	bcf	(3175/8)^0180h,(3175)&7
   840                           	line	38
   841                           	
   842  0109                     l1803:	
   843                           ;Program.c: 38: WREN=1;
   844  0109  150C               	bsf	(3170/8)^0180h,(3170)&7
   845                           	line	39
   846                           ;Program.c: 39: EECON2=0x55;
   847  010A  3055               	movlw	(055h)
   848  010B  008D               	movwf	(397)^0180h	;volatile
   849                           	line	40
   850                           ;Program.c: 40: EECON2=0xAA;
   851  010C  30AA               	movlw	(0AAh)
   852  010D  008D               	movwf	(397)^0180h	;volatile
   853                           	line	41
   854                           	
   855  010E                     l1805:	
   856                           ;Program.c: 41: WR=1;
   857  010E  148C               	bsf	(3169/8)^0180h,(3169)&7
   858                           	line	42
   859                           ;Program.c: 42: while(WR==1);
   860  010F  2910               	goto	l584
   861                           	
   862  0110                     l585:	
   863                           	
   864  0110                     l584:	
   865  0110  188C               	btfsc	(3169/8)^0180h,(3169)&7
   866  0111  2913               	goto	u2201
   867  0112  2914               	goto	u2200
   868  0113                     u2201:
   869  0113  2910               	goto	l584
   870  0114                     u2200:
   871                           	
   872  0114                     l586:	
   873                           	line	43
   874                           ;Program.c: 43: WREN=0;}
   875  0114  110C               	bcf	(3170/8)^0180h,(3170)&7
   876                           	
   877  0115                     l587:	
   878  0115  0008               	return
   879                           	opt stack 0
   880                           GLOBAL	__end_of_EEPROM_write
   881  0116                     	__end_of_EEPROM_write:
   882 ;; =============== function _EEPROM_write ends ============
   883                           
   884                           	signat	_EEPROM_write,8312
   885                           	global	_isr
   886                           psect	text122,local,class=CODE,delta=2
   887                           global __ptext122
   888  0116                     __ptext122:
   889                           
   890 ;; *************** function _isr *****************
   891 ;; Defined at:
   892 ;;		line 6 in file "C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          4       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		Interrupt level 1
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           psect	text122
   919                           	file	"C:\PIC16F877A Demo Concepts\EEPROM with Stepper\Program.c"
   920                           	line	6
   921                           	global	__size_of_isr
   922  0013                     	__size_of_isr	equ	__end_of_isr-_isr
   923                           	
   924  0116                     _isr:	
   925                           	opt	stack 6
   926                           ; Regs used in _isr: [wreg]
   927                           psect	intentry,class=CODE,delta=2
   928                           global __pintentry
   929  0004                     __pintentry:
   930                           global interrupt_function
   931  0004                     interrupt_function:
   932                           	global saved_w
   933  007E                     	saved_w	set	btemp+0
   934  0004  00FE               	movwf	saved_w
   935  0005  0803               	movf	status,w
   936  0006  00F0               	movwf	(??_isr+0)
   937  0007  0804               	movf	fsr0,w
   938  0008  00F1               	movwf	(??_isr+1)
   939  0009  080A               	movf	pclath,w
   940  000A  00F2               	movwf	(??_isr+2)
   941  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   942  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   943  000D  087F               	movf	btemp+1,w
   944  000E  00F3               	movwf	(??_isr+3)
   945  000F  120A  118A  2916   	ljmp	_isr
   946                           psect	text122
   947                           	line	7
   948                           	
   949  0116                     i1l959:	
   950                           ;Program.c: 7: if(INTF==1){
   951  0116  1C8B               	btfss	(89/8),(89)&7
   952  0117  2919               	goto	u1_21
   953  0118  291A               	goto	u1_20
   954  0119                     u1_21:
   955  0119  291E               	goto	i1l566
   956  011A                     u1_20:
   957                           	line	8
   958                           	
   959  011A                     i1l961:	
   960                           ;Program.c: 8: RD0=~RD0;
   961  011A  3001               	movlw	1<<((64)&7)
   962  011B  0688               	xorwf	((64)/8),f
   963                           	line	9
   964                           	
   965  011C                     i1l963:	
   966                           ;Program.c: 9: INTF=0;}}
   967  011C  108B               	bcf	(89/8),(89)&7
   968  011D  291E               	goto	i1l566
   969                           	
   970  011E                     i1l565:	
   971                           	
   972  011E                     i1l566:	
   973  011E  0873               	movf	(??_isr+3),w
   974  011F  00FF               	movwf	btemp+1
   975  0120  0872               	movf	(??_isr+2),w
   976  0121  008A               	movwf	pclath
   977  0122  0871               	movf	(??_isr+1),w
   978  0123  0084               	movwf	fsr0
   979  0124  0870               	movf	(??_isr+0),w
   980  0125  0083               	movwf	status
   981  0126  0EFE               	swapf	saved_w,f
   982  0127  0E7E               	swapf	saved_w,w
   983  0128  0009               	retfie
   984                           	opt stack 0
   985                           GLOBAL	__end_of_isr
   986  0129                     	__end_of_isr:
   987 ;; =============== function _isr ends ============
   988                           
   989                           	signat	_isr,88
   990                           psect	text123,local,class=CODE,delta=2
   991                           global __ptext123
   992  0000                     __ptext123:
   993                           	global	btemp
   994  007E                     	btemp set 07Eh
   995                           
   996                           	DABS	1,126,2	;btemp
   997                           	global	wtemp0
   998  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Thu Feb 27 11:20:11 2025

                    pc 0002                     _RD 0C60                     _WR 0C61                     fsr 0004  
   EEPROM_read@address 0074                    l571 006B                    l580 00DA                    l572 0075  
                  l581 00DA                    l573 0076                    l590 00FF                    l574 008D  
                  l575 00C9                    l584 0110                    l576 00D7                    l585 0110  
                  l577 00D7                    l586 0114                    l578 00D8                    l587 0115  
                  l579 00D9                    _RD0 0040                    _isr 0116                    fsr0 0004  
                  indf 0000                   l1801 0106                   l1803 0109                   l1811 00ED  
                 l1805 010E                   l1813 00FF                   l1821 0028                   l1807 00DD  
                 l1831 007E                   l1823 003F                   l1815 0015                   l1809 00EA  
                 l1841 00B3                   l1833 008C                   l1825 0048                   l1817 0022  
                 l1843 00BB                   l1835 008D                   l1827 005A                   l1819 0026  
                 l1837 0095                   l1845 00C9                   l1829 0076                   l1839 00A4  
                 l1799 0100                   ?_isr 0070                   u2200 0114                   u2201 0113  
                 u2210 0032                   u2220 005A                   u2221 0059                   u2230 008B  
                 u2231 008A                   u2240 00C8                   u2241 00C7                   u2235 0087  
                 u2245 00C4                   u2257 00AC                   u2267 00F4                   _INTF 0059  
                 _WREN 0C62                   u1_20 011A                   u1_21 0119                   _main 0015  
                 btemp 007E                   start 0012                  ??_isr 0070   __end_of_EEPROM_write 0116  
                ?_main 0070                  _EEADR 010D                  _EEPGD 0C67                  i1l565 011E  
                i1l566 011E                  i1l961 011A                  i1l963 011C                  i1l959 0116  
                _PORTB 0006                  _PORTC 0007                  _PORTD 0008                  _TRISB 0086  
                _TRISC 0087                  _TRISD 0088                  main@a 0026                  main@i 0032  
                pclath 000A                  status 0003                  wtemp0 007E   __size_of_EEPROM_read 0023  
         __end_of_main 00DD                 ??_main 0022    EEPROM_write@address 0074                 _EEDATA 010C  
               _EECON2 018D                 _INTCON 000B                 saved_w 007E         __pcstackCOMMON 0070  
__size_of_EEPROM_write 0016           __pidataBANK0 014C           _EEPROM_write 0100             __pmaintext 0015  
           __pintentry 0004       EEPROM_write@data 0076           __size_of_isr 0013   end_of_initialization 0137  
              init_ram 013F          ??_EEPROM_read 0076    __end_of_EEPROM_read 0100    start_initialization 0129  
          __end_of_isr 0129            __pdataBANK0 0034          __pcstackBANK0 0020            _EEPROM_read 00DD  
            __ptext120 00DD              __ptext121 0100              __ptext122 0116              __ptext123 0000  
    interrupt_function 0004           EEPROM_read@a 0020              init_fetch 013B          ?_EEPROM_write 0074  
        __size_of_main 00C8               main@F521 0034               main@stop 0030               intlevel1 0000  
       ??_EEPROM_write 0078           ?_EEPROM_read 0074  
